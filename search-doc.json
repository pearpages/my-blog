[{"title":"Async functions and useEffect","type":0,"sectionRef":"#","url":"async-functions-with-use-effect","content":"","keywords":""},{"title":"Bear in mind","type":1,"pageTitle":"Async functions and useEffect","url":"async-functions-with-use-effect#bear-in-mind","content":"When we declare any function as async, it returns a promise Copy async () => 3 // the same as () => Promise.resolve(3) "},{"title":"The issue in React","type":1,"pageTitle":"Async functions and useEffect","url":"async-functions-with-use-effect#the-issue-in-react","content":"An effect function must not return anything besides a function, which is used for clean-up. "},{"title":"What will not work","type":1,"pageTitle":"Async functions and useEffect","url":"async-functions-with-use-effect#what-will-not-work","content":"Copy useEffect(async () => { // ... }, []) "},{"title":"Simple solutions","type":1,"pageTitle":"Async functions and useEffect","url":"async-functions-with-use-effect#simple-solutions","content":"Create a separate async function outside useEffect and call it from the useEffect.Create a separate async function inside useEffect and call it from useEffect.Use an IIFE(Immediately Invoked Function Expression). "},{"title":"1. Create a separate async function outside useEffect and call it from the useEffect:","type":1,"pageTitle":"Async functions and useEffect","url":"async-functions-with-use-effect#1-create-a-separate-async-function-outside-useeffect-and-call-it-from-the-useeffect","content":"Copy async function getUsers() { const users = await axios.get('https://randomuser.me/api/?page=1&results=10&nat=us'); setUsers(users.data.results); } useEffect(() => { getUsers(); }, []); "},{"title":"2. Create a separate async function inside useEffect and call it from useEffect:","type":1,"pageTitle":"Async functions and useEffect","url":"async-functions-with-use-effect#2-create-a-separate-async-function-inside-useeffect-and-call-it-from-useeffect","content":"Copy useEffect(() => { async function getUsers() { const users = await axios.get(\"https://randomuser.me/api/?page=1&results=10&nat=us\"); setUsers(users.data.results); } getUsers(); }, []); "},{"title":"3. Use an IIFE(Immediately Invoked Function Expression):","type":1,"pageTitle":"Async functions and useEffect","url":"async-functions-with-use-effect#3-use-an-iifeimmediately-invoked-function-expression","content":"Copy useEffect(() => { (async () => { const users = await axios.get(\"https://randomuser.me/api/?page=1&results=10&nat=us\"); setUsers(users.data.results); })(); }, []); "},{"title":"Resources","type":1,"pageTitle":"Async functions and useEffect","url":"async-functions-with-use-effect#resources","content":"Handle API calls using async await with the useEffect hookHow to use async function in React hooks useEffect (Typescript/JS)? "},{"title":"Change mac folder icons","type":0,"sectionRef":"#","url":"change-mac-folder-icons","content":"Basically, copy the contents of an image and paste it in the icon of the folder description (get info) https://support.apple.com/es-es/guide/mac-help/mchlp2313/mac","keywords":""},{"title":"Absolute paths in js projects","type":0,"sectionRef":"#","url":"absolute-paths-in-js-projects","content":"","keywords":""},{"title":"Resources","type":1,"pageTitle":"Absolute paths in js projects","url":"absolute-paths-in-js-projects#resources","content":"Solve Module Import Aliasing for Webpack, Jest, and VSCodeUsing webpack aliasesMake VS code read webpack.config and recognize path with alias?resolve.alias "},{"title":"How to (know where to find the files)","type":1,"pageTitle":"Absolute paths in js projects","url":"absolute-paths-in-js-projects#how-to-know-where-to-find-the-files","content":"In the three scenarios we are replicating the logic concerning where to find the files. We need the bundler (webpack) to know where to find the filesWe need our testing framework (jest) to know where to find the filesWe need our IDE (visual studio code) to know where to find the files "},{"title":"1. Webpack","type":1,"pageTitle":"Absolute paths in js projects","url":"absolute-paths-in-js-projects#1-webpack","content":"We need to tell webpack how to resolve our absolute paths. Copy const path = require('path'); module.exports = { //... resolve: { alias: { Utilities: path.resolve(__dirname, 'src/utilities/'), Templates: path.resolve(__dirname, 'src/templates/') } } }; another example Copy // webpack.config.base.js const path = require('path') module.exports = { // ... resolve: { alias: { 'react-dom': '@hot-loader/react-dom', 'Cms': path.resolve(__dirname, '..', 'src'), 'Test': path.resolve(__dirname, '..', 'test') } } } "},{"title":"2. Jest","type":1,"pageTitle":"Absolute paths in js projects","url":"absolute-paths-in-js-projects#2-jest","content":"In the package.json file we can add a section for the jest module resolver. Copy { \"name\": \"acme\", \"version\": \"1.0.0\", \"description\": \"Acme App\", \"jest\": { \"testMatch\": [ \"**/?(*.)+(test).js\", \"**/?(*.)+(it).js\" ], \"testURL\": \"https://test.com/\", \"collectCoverage\": true, \"coverageDirectory\": \"../build/coverage\", \"coverageReporters\": [ \"html\", \"lcov\" ], \"collectCoverageFrom\": [ \"src/**/*.js\", \"**/*.test.js\" ], \"transform\": { \"^.+\\\\.js$\": \"babel-jest\" }, \"setupFiles\": [ \"raf/polyfill\", \"<rootDir>/test/unit/config/imageOnLoadFix.js\", \"<rootDir>/test/unit/config/windowScrollToFix.js\", \"<rootDir>/test/unit/config/messagesConfig.js\", \"<rootDir>/test/unit/config/setupTests.js\", \"<rootDir>/test/unit/config/propTypesValidatator.js\" ], \"snapshotSerializers\": [ \"<rootDir>/node_modules/enzyme-to-json/serializer\" ], \"moduleNameMapper\": { \"\\\\.svg$\": \"<rootDir>/test/unit/__mocks__/fileMock.js\", \"\\\\.(css|less|scss|sss|styl)$\": \"<rootDir>/node_modules/jest-css-modules\", \"^Cms(.*)$\": \"<rootDir>/src$1\", \"^Test(.*)$\": \"<rootDir>/test$1\" } }, "},{"title":"3. Visual Studio Code","type":1,"pageTitle":"Absolute paths in js projects","url":"absolute-paths-in-js-projects#3-visual-studio-code","content":"We need to create a jsconfig.json that visual studio code will use for its intellisense. Copy { \"compilerOptions\": { \"baseUrl\": \"./\", \"paths\": { \"Cms/*\" :[\"src/*\"], \"Test/*\": [\"test/*\"] } }, \"exclude\": [\"node_modules\", \"build\"] } "},{"title":"Conditional validation with Yup and Formik","type":0,"sectionRef":"#","url":"conditional-validation-with-yup-and-formik","content":"https://stackoverflow.com/questions/54919228/conditional-validation-with-yup-and-formik The trick for doing conditional validation is to be part of a bigger validation schema. Copy const validationSchema = Yup.object() .shape({ isCompany: Yup.boolean() companyName: Yup.string() }) We want to conditionally validate companyName using isCompany value. Copy const validationSchema = Yup.object() .shape({ isCompany: Yup.boolean() companyName: Yup.string() .when('isCompany', { is: true, // it can also be a 'function', e.g. function (isCompany) { return assertion } then: Yup.string().required('Field is required'), otherwise: Yup.string() }) })","keywords":""},{"title":"Deep equality in js Objects","type":0,"sectionRef":"#","url":"deep-equality-in-js-objects","content":"How to Compare Objects in JavaScript The deep equality is similar to the shallow equality, but with one difference. During the shallow check, if the compared properties are objects, a recursive shallow equality check is performed on these nested objects. Copy function deepEqual(object1, object2) { const keys1 = Object.keys(object1); const keys2 = Object.keys(object2); if (keys1.length !== keys2.length) { return false; } for (const key of keys1) { const val1 = object1[key]; const val2 = object2[key]; const areObjects = isObject(val1) && isObject(val2); if ( areObjects && !deepEqual(val1, val2) || !areObjects && val1 !== val2 ) { return false; } } return true; } function isObject(object) { return object != null && typeof object === 'object'; }","keywords":""},{"title":"Functional Programming Useful Definitions","type":0,"sectionRef":"#","url":"definitions","content":"Closures A closure is the bundling of a function with its lexical environment. Closures are created at runtime during function creation time. Closures are how partial applications get their fixed arguments. Compose Copy const compose = (...fns) => x => fns.reduceRight((y, f) => f(y), x) Currying A curried function is a function that takes multiple parameters one at a time, by taking the first argument, and returning a series of functions which each take the next argument until all the parameters have been fixed, and the function application can complete, at which point, the resulting value si returned. Data Last Style where you take the specializing parameters first, and take the data the function will act last. Destructuring Copy const [t, u] = ['hello', 'world'] t // 'hello' u // 'world' Copy const { blop: blep } = { blop: 'hello world' } blep // 'hello world' Expression is a piece of code which evaluates to some value. First class functions The ability to use functions as data values. First order function don't take function as an argument or returns a function as output. Flip Copy const flip = fn => a => b => fn(b)(a) Functor is a data structure that can be mapped over. In other words, it's container which has an interface which can be used to apply a function to the values inside it. Higher order function is any function tat takes a function as an argument, returns a function or both. Immutability An immutable object is an object that can't be modified after it's created. Method A method is a function associated with an object. Non-determinism parallel processing + mutable state. Partial application it's a function which has some arguments fixed inside its closure scope. A function with some of its parameters fixed is to be partially applied All curried functions return partial applications. it's a function which has already been applied to some - but not yet all - of its arguments. The arguments which the function has already been applied to are called fixed parameters. Pipe Copy const pipe = (...fns) => x => fns.reduce((y, f) => f(y), x) Point-free style is a style of programming where function definitions do not make reference to the function's arguments. Pure functions given the same input, will always return the same output. Produce no side effects. Reduce (aka: fold, accumulate, reduceLeft) lets you iterate over a list, applying a function to an accumulated value and the next item in the list, until the iteration is complete and the accumulated value gets returned. Frequently, it's the most elegant way to do any non-trivial processing on a collection of items. Referentially transparent When an expression can be replaced with its corresponding value without changing the meaning of the program. REPL (Read, Eval, Print, Loop) Stream A list expressed over time. Trace Copy const trace = label => value => { console.log(`${ label }: ${ value }`)} return value Copy const h = pipe( g, f, trace('after f') ) Trie In many functional programming languages, there are special immutable data structures called trie which are effectively deep frozen - meaning no property can change, regardless of the level of the property in the object hierarchy.","keywords":""},{"title":"Docker core concepts","type":0,"sectionRef":"#","url":"docker-core-concepts","content":"","keywords":""},{"title":"TL;DR","type":1,"pageTitle":"Docker core concepts","url":"docker-core-concepts#tldr","content":"Docker runs an application such as MySQL in a singlecontainer.Your web application will probably require several containers your code (and runtime)a databasea web server, etc. A container is launched from an image.Containers start in clean (image) state so data is not permanently stored.Containers are isolated from the host and other containers.Each container is started with a single Docker command.Optionally, orchestration tools such as Docker Swarm and Kubernetes can be used for container management and replication on production systems. "},{"title":"Containers","type":1,"pageTitle":"Docker core concepts","url":"docker-core-concepts#containers","content":"It helps to think of a container as a mini VM with its own operating system, libraries, and application files. Docker emulates an Operating System so you can run isolated applications within their own file system. Docker therefore uses fewer host OS resources than a VM. You should therefore use separate containers for your application, the database, and any other dependencies you require. Containers are isolated Each running container is available at localhost or 127.0.0.1 , but a TCP port must be exposed to use it, e.g. Containers are stateless and disposable Data written to the container’s file system is lost the moment it is shuts down! Docker offers volumes and host folder bind mounts. Containers run on Linux It doesn’t matter what host OS you’re using:Docker containers run natively on Linux. For that reason, Windows and macOS run Docker containers inside a Linux VM! "},{"title":"Images","type":1,"pageTitle":"Docker core concepts","url":"docker-core-concepts#images","content":"A Docker image is a snapshot of a file and operating system with libraries and application executables. In essence, an image is a recipe or template for creating a container. (In a similar way that some computer languages let you define a reusable class template for instantiating objects of the same type.) Any number of containers can be started from a single image. This permits scaling on production servers, although you’re unlikely to launch multiple containers from the same image during development. The Docker Hub provides a repository of common images for popular applications such asNGINX,MySQL,MongoDB,Elasticsearch,redisand more. "},{"title":"Dockerfile","type":1,"pageTitle":"Docker core concepts","url":"docker-core-concepts#dockerfile","content":"OSwork directories and user permissionsenvironment variables, copying files from host, running install processes, etc.volumes for data storagenetwork configuration and ports exposed to localhostlaunch command "},{"title":"Volumes","type":1,"pageTitle":"Docker core concepts","url":"docker-core-concepts#volumes","content":"Some containers – such as databases – absolutely must retain data so Docker provides two storage mechanism types: Volumes: a Docker-managed file system, andBind mounts: a file or directory on the host machine. Volumes are the recommended way to persist data. In some cases, it’s the only option – for example, MongoDB does not currently support bind mounts on Windows or macOS file systems. "},{"title":"Networks","type":1,"pageTitle":"Docker core concepts","url":"docker-core-concepts#networks","content":"Docker creates a virtual network and assigns each running container a unique IP address. It’s then possible for one container to communicate with another using its address. An easier option is to create your own Docker virtual network. Any container added to that network can communicate with another using its name, i.e. mysql:3306 resolves to the correct address. Container TCP/IP ports can be exposed: within the virtual network only, orwithin the virtual network and to the host. "},{"title":"Docker Compose","type":1,"pageTitle":"Docker core concepts","url":"docker-core-concepts#docker-compose","content":"An application requiring Node.js, NGINX, and MongoDB containers is started with three commands – possibly executed in three terminals in the correct order (probably MongoDB, then the Node.js application, then NGINX). Docker Compose is a tool for managing multiple containers with associated volumes and networks. A single configuration file, normally named docker-compose.yml , defines the containers and can override Dockerfile settings where necessary. It’s practical to create a Docker Compose configuration for development. You could also create one for production, but there are better options… "},{"title":"Orchestration","type":1,"pageTitle":"Docker core concepts","url":"docker-core-concepts#orchestration","content":"Containers are portable and reproducible. This allows you to scale a single application by launching identical containers on the same server, another server, or even a different data center on the other side of the world. "},{"title":"Docker client-server application","type":1,"pageTitle":"Docker core concepts","url":"docker-core-concepts#docker-client-server-application","content":"The server is responsible for container management and is controlled via a REST API. The command-line interface communicates with this API, so it’s possible to run a server daemon anywhere and connect from another device. This rarely matters during development: the Docker server and CLI is installed on the same PC. "},{"title":"When not to use Docker","type":1,"pageTitle":"Docker core concepts","url":"docker-core-concepts#when-not-to-use-docker","content":"Your application is not statelessYou are using a Windows ServerPerformance is criticalStability is importantTo store mission-critical dataTo improve securityTo create GUI applicationsBecause Docker is cool "},{"title":"Ecmascript","type":0,"sectionRef":"#","url":"ecmascript","content":"","keywords":""},{"title":"Differences in browser support","type":1,"pageTitle":"Ecmascript","url":"ecmascript#differences-in-browser-support","content":"With regards to browser support, people usually talk about “ECMAScript compatibility” rather than “JavaScript compatibility”. "},{"title":"Resources","type":1,"pageTitle":"Ecmascript","url":"ecmascript#resources","content":"What’s the difference between JavaScript and ECMAScript? "},{"title":"Deploy blog with Docusaurus","type":0,"sectionRef":"#","url":"deploy-blog-with-docusaurus","content":"","keywords":""},{"title":"Resources","type":1,"pageTitle":"Deploy blog with Docusaurus","url":"deploy-blog-with-docusaurus#resources","content":"DeploymentCreate a robots.txtGenerating a new SSH key "},{"title":"Testing build local","type":1,"pageTitle":"Deploy blog with Docusaurus","url":"deploy-blog-with-docusaurus#testing-build-local","content":"Copy npm run build Copy npm run serve or altogether Copy npm run serve --build --port 80 --host 0.0.0.0 "},{"title":"docusaurus.config.js","type":1,"pageTitle":"Deploy blog with Docusaurus","url":"deploy-blog-with-docusaurus#docusaurusconfigjs","content":"Copy module.exports = { url: \"https://pages.ninja\", baseUrl: \"/\", organizationName: \"pearpages\", // Usually your GitHub org/user name. projectName: \"my-blog\", // Usually your repo name. }; "},{"title":"Using a custom domain","type":1,"pageTitle":"Deploy blog with Docusaurus","url":"deploy-blog-with-docusaurus#using-a-custom-domain","content":"In case you want to use your custom domain for GitHub Pages, create a CNAME file in the static directory. Copy # CNAME pearpages.ninja Anything within the static directory will be copied to the root of the build directory for deployment. At this point you can also think of adding a robots.txt file. info By default, GitHub Pages runs published files through Jekyll. Since Jekyll will discard any files that begin with _, it is recommended that you disable Jekyll by adding an empty file named .nojekyll file to your static directory. This is done by default. Copy User-agent: * Disallow: / "},{"title":"Configuring and apex domain (Using a DNS provider)","type":1,"pageTitle":"Deploy blog with Docusaurus","url":"deploy-blog-with-docusaurus#configuring-and-apex-domain-using-a-dns-provider","content":"GitHub Docs Copy # the IPs are pointing now to GitHub A @ 185.199.108.153 600 seconds A @ 185.199.109.153 1 hour A @ 185.199.110.153 1 hour A @ 185.199.111.153 1 hour # www.yourdomain.com and yourdomain.com point to the same place CNAME www @ 1 hour Once your DNS provider points to GitHub you will be able to use https feature from GitHub. "},{"title":"Manual deploy","type":1,"pageTitle":"Deploy blog with Docusaurus","url":"deploy-blog-with-docusaurus#manual-deploy","content":"It is going to publish to gh-pages using the current branch. Copy GIT_USER=pearpages npm run deploy "},{"title":"Automatic deploy using github actions","type":1,"pageTitle":"Deploy blog with Docusaurus","url":"deploy-blog-with-docusaurus#automatic-deploy-using-github-actions","content":"Generating a new SSH key Use a SSH key (an existing - but not used in GitHub - o create new one) Paste it as a deploy key Copy # public key pbcopy < ~/.ssh/key.pub Paste the private key as GitHub secret. Using name GH_PAGES_DEPLOY Copy # private key pbcopy < ~/.ssh/key Create the workflow file in .github/workflows/publishing.yml Copy name: publishing on: pull_request: branches: [master] push: branches: [master] jobs: checks: if: github.event_name != 'push' runs-on: ubuntu-latest steps: - uses: actions/checkout@v1 - uses: actions/setup-node@v1 with: node-version: '12.x' - name: Test Build run: | if [ -e yarn.lock ]; then yarn install --frozen-lockfile elif [ -e package-lock.json ]; then npm ci else npm i fi npm run build gh-release: if: github.event_name != 'pull_request' runs-on: ubuntu-latest steps: - uses: actions/checkout@v1 - uses: actions/setup-node@v1 with: node-version: '12.x' - name: Add key to allow access to repository env: SSH_AUTH_SOCK: /tmp/ssh_agent.sock run: | mkdir -p ~/.ssh ssh-keyscan github.com >> ~/.ssh/known_hosts echo \"${{ secrets.GH_PAGES_DEPLOY }}\" > ~/.ssh/id_rsa chmod 600 ~/.ssh/id_rsa cat <<EOT >> ~/.ssh/config Host github.com HostName github.com IdentityFile ~/.ssh/id_rsa EOT - name: Release to GitHub Pages env: USE_SSH: true GIT_USER: git run: | git config --global user.email \"actions@gihub.com\" git config --global user.name \"gh-actions\" if [ -e yarn.lock ]; then yarn install --frozen-lockfile elif [ -e package-lock.json ]; then npm ci else npm i fi npx docusaurus deploy "},{"title":"Edit links pointing to your repo","type":1,"pageTitle":"Deploy blog with Docusaurus","url":"deploy-blog-with-docusaurus#edit-links-pointing-to-your-repo","content":"This was you can publish directly from github web. Copy { presets: [ [ '@docusaurus/preset-classic', { docs: { sidebarPath: require.resolve('./sidebars.js'), // Please change this to your repo. editUrl: 'https://github.com/pearpages/my-blog/edit/master/' }, blog: { showReadingTime: true, // Please change this to your repo. editUrl: 'https://github.com/pearpages/my-blog/edit/master/' }, theme: { customCss: require.resolve('./src/css/custom.css'), }, }, ], ], } "},{"title":"ES6 Object Destructuring Default Parameters","type":0,"sectionRef":"#","url":"es6-object-destructuring-default-parameters","content":"","keywords":""},{"title":"Resources","type":1,"pageTitle":"ES6 Object Destructuring Default Parameters","url":"es6-object-destructuring-default-parameters#resources","content":"ES6 Object Destructuring Default Parameters "},{"title":"Flair Espresso Signature","type":0,"sectionRef":"#","url":"flair-espresso-signature","content":"The espresso machine I want to try. The Signature Series of the Flair Espresso Maker is a step up from the Classic in terms of styling, beauty, and aesthetics. Featuring either a brushed chrome, a matte black or our new white finish and our Signature copper-plated portafilter base, any Flair Signature will be the centerpiece of your kitchen or coffee station. Each Signature comes ready with a stainless steel screen, our Bottomless 2-in-1 Portafilter, and our custome pressure gauge, to produce the very best in espresso. Official PageFlair Espresso Signature in BeanGreen","keywords":""},{"title":"How to install docker","type":0,"sectionRef":"#","url":"how-to-install-docker","content":"","keywords":""},{"title":"Install Docker on macOS","type":1,"pageTitle":"How to install docker","url":"how-to-install-docker#install-docker-on-macos","content":"Docker Desktop for Mac OS Sierra 10.13 and above can be downloaded from Docker Hub. The package includes the Docker server, CLI, Docker Compose, Docker Swarm, and Kubernetes. Two editions are available: stable and edge with experimental features. The stable version is best for most developers. Double-click Docker.dmg to open the installer.  "},{"title":"Test your Docker installation","type":1,"pageTitle":"How to install docker","url":"how-to-install-docker#test-your-docker-installation","content":"Copy docker version Copy docker-compose version Copy docker run hello-world "},{"title":"Favicons","type":0,"sectionRef":"#","url":"favicons","content":"","keywords":""},{"title":"sizes (px)","type":1,"pageTitle":"Favicons","url":"favicons#sizes-px","content":""},{"title":"Web (main/general)","type":1,"pageTitle":"Favicons","url":"favicons#web-maingeneral","content":"16x16: browser favicon32x32: taskbar shortcut icon (used by default by Docusaurus)96x96: desktop shortcut icon (and Google TV) Copy <link rel=\"icon\" type=\"image/png\" href=\"https://cdn.yourwebsite.com/favicon-16x16.png\" sizes=\"16x16\"> <link rel=\"icon\" type=\"image/png\" href=\"https://cdn.yourwebsite.com/favicon-32x32.png\" sizes=\"32x32\"> <link rel=\"icon\" type=\"image/png\" href=\"https://cdn.yourwebsite.com/favicon-96x96.png\" sizes=\"96x96\"> "},{"title":"Apple touch icons","type":1,"pageTitle":"Favicons","url":"favicons#apple-touch-icons","content":"120x120: iPhone Retina (iOS 7)180x180: iPhone 6 Plus (iOS 8+)152x152: iPad Retina (iOS 7)167x167: iPad Pro (iOS 8+) Do you actually need to declare these HTML tags in the <head>? No. As long as the touch icons are uploaded to the root folder of the website, Apple will know to look for them there, however, other operating systems also use these icons — even Android! It’s better to define them in the <head>. Copy <link rel=\"apple-touch-icon\" href=\"older-iPhone.png\"> // 120px <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"iPhone-6-Plus.png\"> <link rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"iPad-Retina.png\"> <link rel=\"apple-touch-icon\" sizes=\"167x167\" href=\"iPad-Pro.png\"> "},{"title":"Windows","type":1,"pageTitle":"Favicons","url":"favicons#windows","content":"70x70270x270310x310310x150 A browserconfig.xml file with the following code should be uploaded to the root directory of your website Copy <?xml version=\"1.0\" encoding=\"utf-8\"?> <browserconfig> <msapplication> <tile> <square70x70logo src=\"https://cdn.yourwebsite.com/mstile-70x70.png\"/> <square150x150logo src=\"https://cdn.yourwebsite.com/mstile-270x270.png\"/> <square310x310logo src=\"https://cdn.yourwebsite.com/mstile-310x310.png\"/> <wide310x150logo src=\"https://cdn.yourwebsite.com/mstile-310x150.png\"/> <TileColor>#2b5797</TileColor> </tile> </msapplication> </browserconfig> "},{"title":"Other","type":1,"pageTitle":"Favicons","url":"favicons#other","content":"128x128: Chrome Webstore icon196x196: Android Chrome icon228x228: Opera Coast icon "},{"title":"The Essential Meta Tags for Social Media","type":1,"pageTitle":"Favicons","url":"favicons#the-essential-meta-tags-for-social-media","content":"The Essential Meta Tags for Social Media "},{"title":"In Docusaurus","type":1,"pageTitle":"Favicons","url":"favicons#in-docusaurus","content":"Faviconflaticon Copy <!-- autogenerated by Docusaurus --> <link rel=\"shortcut icon\" href=\"/img/favicon.png\" data-react-helmet=\"true\"> Copy module.exports = { favicon: 'https://v2.docusaurus.io/favicon.ico', }; "},{"title":"Resources","type":1,"pageTitle":"Favicons","url":"favicons#resources","content":"Here's Everything You Need to Know About Favicons in 2020Apple's official documentation) "},{"title":"How to remove array duplicates in ES6","type":0,"sectionRef":"#","url":"how-to-remove-array-duplicates-in-es6","content":"","keywords":""},{"title":"1. Using Set","type":1,"pageTitle":"How to remove array duplicates in ES6","url":"how-to-remove-array-duplicates-in-es6#1-using-set","content":"Set is a new data object introduced in ES6. Because Set only lets you store unique values. When you pass in an array, it will remove any duplicate values. It's very simple, very quick and elegant, but I don't think it might be very performant; so I would use it for small arrays. Copy const array = [4, 1, 2, 4, 4, 3] const uniqueSet = new Set(array) const backToArray = [...uniqueSet] "},{"title":"2. Using filter","type":1,"pageTitle":"How to remove array duplicates in ES6","url":"how-to-remove-array-duplicates-in-es6#2-using-filter","content":"Very smart and short solution. Because indexOf will return the first appearance, only the first unique value will stay in the new returning array. Copy const array = [4, 1, 2, 4, 4, 3] array.filter((item, index) => array.indexOf(item) === index) "},{"title":"Getting the duplicates","type":1,"pageTitle":"How to remove array duplicates in ES6","url":"how-to-remove-array-duplicates-in-es6#getting-the-duplicates","content":"Copy array.filter((item, index) => array.indexOf(item) !== index) "},{"title":"3. Using reduce","type":1,"pageTitle":"How to remove array duplicates in ES6","url":"how-to-remove-array-duplicates-in-es6#3-using-reduce","content":"Copy const array = [4, 1, 2, 4, 4, 3] array.reduce((unique, item) => unique.includes(item) ? unique : [...unique, item], []) "},{"title":"Introduction to Docker","type":0,"sectionRef":"#","url":"introduction-to-docker","content":"","keywords":""},{"title":"Serverless web applications","type":1,"pageTitle":"Introduction to Docker","url":"introduction-to-docker#serverless-web-applications","content":"Docker can be used in development environments to: run build processes such as JavaScript module bundling and Sass preprocessingserve the web application, andemulate infrastructures for serverless function testing. "},{"title":"Static sites","type":1,"pageTitle":"Introduction to Docker","url":"introduction-to-docker#static-sites","content":"A static site is constructed using a build process which places content (markdown files, JSON data, database fields, etc.) into templates to create folders of static HTML, CSS, JavaScript, and media files. Those pre-rendered files can be deployed anywhere: no server-side runtime or database is required. Static sites are often referred to as the JAMstack(JavaScript, APIs, and Markdown). All content is pre-rendered where possible, but dynamic services such as a site search can adopt server-based APIs. "},{"title":"Javascript influential books","type":0,"sectionRef":"#","url":"js-influential-books","content":"","keywords":""},{"title":"Resources","type":1,"pageTitle":"Javascript influential books","url":"js-influential-books#resources","content":"12 Books Every JavaScript Developer Should Read by Eric EliottTop 20 of Best JavaScript Books Recommended Most Times by Javascript Pros "},{"title":"The List","type":1,"pageTitle":"Javascript influential books","url":"js-influential-books#the-list","content":"JavaScript for Kids: A Playful Introduction to Programming by Nick Morgan   Composing Software by Eric Elliott   Eloquent JavaScript: A Modern Introduction to Programming by Marijn Haverbeke   JavaScript: The Good Parts by Douglas Crockford   Programming JavaScript Applications: Robust Web Architecture with Node, HTML5, and Moderns JS Libraries by Eric Elliott   Effective JavaScript: 68 Specific Ways to Harness the Power of JavaScript by David Herman   JavaScript: The Definitive Guide by David Flanagan   You Don’t Know JS by Kyle Simpson| Free First Edition Online Book| Free Second Edition Online Book   JavaScript Allongé: The Six Edition by Reginald Braithwaite | Free Book Online   Node.js in Action by Mike Cantelon, Marc Harter, TJ Holowaychuk, and Nathan Rajlich   High Performance Browser Networking by Ilya Grigorik| Free Book Online   Web Audio API by Boris Smus   JavaScript Patterns: Build Better Applications with Coding and Design Patterns by Stoyan Stefanov   Beginning JavaScript And CSS Development with jQuery by Richard York   JavaScript Programmer’s Reference by Alexei White   Secrets of the JavaScript Ninja by John Resig and Bear Bibeault   Learning Javascript Design Patterns by Addy Osmani   High Performance JavaScript by Nicholas C. Zakas   "},{"title":"Javascript Functions","type":0,"sectionRef":"#","url":"js-functions","content":"","keywords":""},{"title":"Function Objects","type":1,"pageTitle":"Javascript Functions","url":"js-functions#function-objects","content":"Functions in javascript are objects. Objects produced from object literals are linked to Object.prototype. Function objects are linked to Function.prototype (which is linked to Object.prototype). Every function is also created with two additional hidden properties: the function's context and the code that implements the function's behavior: prototypecontext (this)code implementation Every function object is created with a prototype property. Its value is an object with a constructor property whose value is the function. **This is distinct from the hidden link to Function.prototype. Since functions are objects, they can be used like any other value. Also, since functions are objects, functions can have methods. Copy const helloWorld = function () { console.log('hello World') } const goodByeWorld = function () { console.log('Goodbye World') } const callMyFunctions = function (...myFunctions) { myFunctions.forEach(fn => fn()) } callMyFunctions(helloWorld, goodByeWorld) // 'hello World', 'Goodbye World' "},{"title":"Function Literal","type":1,"pageTitle":"Javascript Functions","url":"js-functions#function-literal","content":"Function objects are created with function literals: Copy const add = function (a, b) { return a + b; } reserved word functionoptional function nameparametersstatements A function literal can appear anywhere that an expression can appear. Functions can be defined inside other functions. An inner function of course has access to its parameters and variables. An inner function also enjoys access to the parameters and variables of the functions it is nested within. The function object created by a function literal contains a link to that outer context. This is called closure. "},{"title":"Invocation","type":1,"pageTitle":"Javascript Functions","url":"js-functions#invocation","content":"Invoking a function suspends the execution of the current function, passing control and parameters to the new function. In addition to the declared parameters, every function receives two additional parameters: this and arguments. Copy function myFunction(a, b, c, d) { console.log(a, b, c, d) } myFunction(1, 2) // 1, 2, undefined, undefined The this parameter value is determined by the invocation pattern. There are four patterns of invocation in Javascript. The patterns differ in how the bonus parameter this is initialized: the method invocationthe function invocationthe constructor invocationthe apply invocation "},{"title":"1. The Method Invocation Pattern","type":1,"pageTitle":"Javascript Functions","url":"js-functions#1-the-method-invocation-pattern","content":"When a function is stored as a property of an object, we call it a method. When a method is invoked, this is bound to that object. Copy const myObject = { value: 0, increment: function (inc) { this.value += typeof inc === \"number\" ? inc : 1; } }; myObject.increment(); // 1 console.log(myObject.value); myObject.increment(); // 2 console.log(myObject.value); myObject.increment(4); console.log(myObject.value); // 6 "},{"title":"2. The Function Invocation Pattern","type":1,"pageTitle":"Javascript Functions","url":"js-functions#2-the-function-invocation-pattern","content":"When a function is not the property of an object, then is invoked as a function: Copy function add(a, b) { return a + b; } const sum = add(3, 4) // 7 When a function is invoked with this pattern, this is bound to the global (window/global) object. This was a mistake in the design of the language. A consequence of this error is that a method cannot employ an inner function to help it do its work because the inner function does not share the method's access to the object as its this is bound to th wrong (global) value. Copy function add(a, b) { return a + b; } window.value = 5 // global object const myObject = { value: 2, double: function () { const helper = function () { this.value = add(this.value, this.value); }; helper(); } }; myObject.double(); console.log(myObject.value); // 2 console.log(window.value); // 10, global object has been updated Copy function add(a, b) { return a + b; } const myObject = { value: 2, double: function () { const that = this; // Workaround const helper = function () { that.value = add(that.value, that.value); }; helper(); } }; myObject.double(); console.log(myObject.value); // 4 "},{"title":"3. The Constructor Invocation Pattern","type":1,"pageTitle":"Javascript Functions","url":"js-functions#3-the-constructor-invocation-pattern","content":"If a function is invoked with the new prefix, then a new object will be created with a hidden link to the value of the function's prototype member, and this will be bound to that object. Copy const quo = function (string) { this.status = string; } quo('hello') // as explained in the Function Invocation Pattern, this is bound to the **global** object console.log(window.status) // 'hello' Functions that are intended to be used with the new prefix are called constructors. By convention, they are kept in variables with a capitalized name. Copy const Quo = function (string) { this.status = string; } Quo.prototype.getStatus = function () { return this.status; } const aQuo = new Quo('confused'); console.log(aQuo.getStatus()) Use of this style of constructor functions is not recommended. "},{"title":"4. The Apply Invocation Pattern","type":1,"pageTitle":"Javascript Functions","url":"js-functions#4-the-apply-invocation-pattern","content":"The apply method lets us construct an array of arguments to use to invoke a function. It also lets us choose the value of this. The apply method takes two parameters. The first is the value that should be bound to this. The second is an array of parameters. Copy const add = function (a, b) { return a + b; } const sum = add.apply(null, [3, 4]) // this, parameters[] console.log(sum) // 7 Copy const Quo = function (string) { this.status = string; } Quo.prototype.getStatus = function () { return this.status; } const statusObject = { status: 'OK' } const status = Quo.prototype.getStatus.apply(statusObject); // statusObject is the **this** and no parameters[] needed console.log(status); // 'OK' const status2 = Quo.prototype.getStatus.call(statusObject); // call also uses the **this** and the arguments follow separated by comas console.log(status2); // 'OK' "},{"title":"Arguments","type":1,"pageTitle":"Javascript Functions","url":"js-functions#arguments","content":"A bons parameter that is available to functions when they are invoked is the arguments 'array'. It gives the function access to all the arguments that were supplied with the invocation, including excess arguments that were not assigned to parameters. Because of a design error, arguments is not really an array. Copy function myFunction() { console.log(arguments.length); console.log(arguments); } myFunction(1, 2, 3, 4, 5, 6); // 6 // [1, 2, 3, 4, 5, 6] Copy function sum() { return [...arguments].reduce((current, total) => total += current, 0); } console.log(sum(1, 2, 3, 4, 5, 6, 7, 8)); // 36 "},{"title":"Return","type":1,"pageTitle":"Javascript Functions","url":"js-functions#return","content":"A function always returns a value. If the return value is not specified, the undefined is returned. If the function was invoked with the new prefix and the return value is not an object, then this (the new object) is return instead. Copy function a() { return 'a'; } function un() {} console.log(a()); // 'a' console.log(un()); // undefined Copy function Car(driver, doors) { this.driver = driver; this.doors = doors; } console.log(new Car('Pere', 4)) // Car Copy function Car(driver, doors) { this.driver = driver; this.doors = doors; return { hello: 'hello', ref: this } } console.log(new Car('Pere', 4)) // {hello: 'hello', ref: Car} "},{"title":"Exceptions","type":1,"pageTitle":"Javascript Functions","url":"js-functions#exceptions","content":"Copy function add(a, b) { if (typeof a !== 'number' || typeof b !== 'number') { throw { name: 'TypeError', message: 'add needs numbers' } } return a + b; } Copy const error = new Error('something went wrong') console.log(error.name) // 'Error' console.log(error.message) // 'something went wrong' "},{"title":"Augmenting Types","type":1,"pageTitle":"Javascript Functions","url":"js-functions#augmenting-types","content":"Javascript allows the basic types of the language to be augmented. We can add a method to prototype and that makes it available to all the objects. Copy Function.prototype.method = function (name, func) { this.prototype[name] = func; return this; } Number.method('integer', function () { return Math[this < 0 ? 'ceil' : 'floor'](this); }) (-10/3).integer(); // -3 Copy Function.prototype.method = function (name, func) { this.prototype[name] = func; return this; } String.method('trim', function () { return this.replace(/^\\s+|\\s+$/g, '') }) const aString = \" \" + \" neat \";; console.log(aString.trim()) // Becuase of the dy namic nature of Javascript's prototypal inheritance, all values are immediately endowed with the new methods, even values that were created before the methods were created. "},{"title":"Recursion","type":1,"pageTitle":"Javascript Functions","url":"js-functions#recursion","content":"A recursive function is a function that calls itself, either directly or indirectly. "},{"title":"The towers of Hanoi","type":1,"pageTitle":"Javascript Functions","url":"js-functions#the-towers-of-hanoi","content":"Copy function hanoi(disc, src, aux, dst) { if (disc > 0) { hanoi(disc - 1, src, dst, aux); document.writeln(`Move disc ${disc} from ${src} to ${dst} <br/>`); hanoi(disc - 1, aux, src, dst); } } hanoi(3, 'Src', 'Aux', 'Dst'); "},{"title":"Walk the DOM","type":1,"pageTitle":"Javascript Functions","url":"js-functions#walk-the-dom","content":"Recursive functions can be very effective in manipulating tree structures such as the browser's Document Object Model (DOM). Copy function walkTheDOM(node, func) { func(node) node = node.firstChild while (node) { walkTheDOM(node, func) node = node.nextSibling } } "},{"title":"Tail recursion optimization","type":1,"pageTitle":"Javascript Functions","url":"js-functions#tail-recursion-optimization","content":"Some languages offer the tail recursion optimization. This means that if a function returns the result of invoking itself recursively, then the invocation is replaced with a loop, which can significantly speed things up. Tail-call optimization is a part of the ES2015-ES6 specification. "},{"title":"Scope","type":1,"pageTitle":"Javascript Functions","url":"js-functions#scope","content":"Scope in a programming language controls the visibility and lifetimes of variables and parameters. Javascript does have function scope. That means that the parameters and variables defined in a function are not visible outside of the function. "},{"title":"Closure","type":1,"pageTitle":"Javascript Functions","url":"js-functions#closure","content":"The good news about scope is that inner functions get access to the parameters and variables of the functions they are defined within (with the exception of this and arguments). An interesting case is when the innfer function has a longer lifetime than its outer function. Copy const isNumber = value => typeof value === 'number' const myObject = (function () { let value = 0 return { increment: (inc) => value += isNumber(inc) ? inc : 1, getValue: () => value } }()) myObject.increment() myObject.increment() myObject.increment() console.log(myObject.getValue()) Copy function quo (status) { return { getStatus: () => status } } const myQuo = quo('amazed') console.log(myQuo.getStatus()) This is possible beacuse the function has access to the context in which it was created. This is called closure. "},{"title":"Callbacks","type":1,"pageTitle":"Javascript Functions","url":"js-functions#callbacks","content":"Providing a function that will be invoked when the asynchronous task is finished. Copy const request = prepareTheRequest() const myCallback = response => display(response) sendRequestAsynchronously(request, myCallback) "},{"title":"Module","type":1,"pageTitle":"Javascript Functions","url":"js-functions#module","content":"A module is a function or object that presents an interface but hides its state and implementation. The module pattern takes advantage of function scope and closure to create relationships that are binding and private. "},{"title":"Cascade","type":1,"pageTitle":"Javascript Functions","url":"js-functions#cascade","content":"If we have methods returning this instead of undefined we can enable cascades. Copy getElement('myBoxDiv') .move(350, 150) .width(100) .height(100) .color('red') .border('10px outset') .padding('4px') .appendText('Please stand by'); "},{"title":"Curry","type":1,"pageTitle":"Javascript Functions","url":"js-functions#curry","content":"Currying allows us to produce a new function by combining a function an argument. "},{"title":"Memoization","type":1,"pageTitle":"Javascript Functions","url":"js-functions#memoization","content":"Functions can use objects to remember the results of previous operations, making it possible to avoid unnecessary work. "},{"title":"Resources","type":1,"pageTitle":"Javascript Functions","url":"js-functions#resources","content":"Javascript The Good Parts by Douglas Crockford "},{"title":"Multiple users in gitconfig","type":0,"sectionRef":"#","url":"multiple-users-in-gitconfig","content":"","keywords":""},{"title":"1. Configure an individual repo which overrides the global configuration","type":1,"pageTitle":"Multiple users in gitconfig","url":"multiple-users-in-gitconfig#1-configure-an-individual-repo-which-overrides-the-global-configuration","content":"Copy git config user.name \"Your Name Here\" git config user.email your@email.com Whereas the default user/email is configured in your ~/.gitconfig Copy git config --global user.name \"Your Name Here\" git config --global user.email your@email.com "},{"title":"2. Use conditional includes","type":1,"pageTitle":"Multiple users in gitconfig","url":"multiple-users-in-gitconfig#2-use-conditional-includes","content":"In the global config ~/.gitconfig Copy [user] name = John Doe email = john@doe.tld [includeIf \"gitdir:~/work/\"] path = ~/work/.gitconfig Work specific config ~/work/.gitconfig Copy [user] email = john.doe@company.tld "},{"title":"My favorite Corgi meme","type":0,"sectionRef":"#","url":"my-favorite-corgi-meme","content":"","keywords":""},{"title":"Bonus","type":1,"pageTitle":"My favorite Corgi meme","url":"my-favorite-corgi-meme#bonus","content":" "},{"title":"Javascript Objects","type":0,"sectionRef":"#","url":"js-objects","content":"","keywords":""},{"title":"Object literals","type":1,"pageTitle":"Javascript Objects","url":"js-objects#object-literals","content":"Copy const empty_object = {} Copy const aPerson = { firstName: 'Pere', lastName: 'Pages' } "},{"title":"Retrieval","type":1,"pageTitle":"Javascript Objects","url":"js-objects#retrieval","content":"Copy const aPerson = { firstName: 'Pere', lastName: 'Pages' } console.log(aPerson.firstName) // 'Pere' console.log(aPerson.lastName) // 'Pages' console.log(aPerson.whatever) // undefined console.log(aPerson.nickname || 'pearpages') // pearpages "},{"title":"Update","type":1,"pageTitle":"Javascript Objects","url":"js-objects#update","content":"If the property name already exists in the object, the property is replaced. If the object does not already have that property name, the object is augmented. Copy const aPerson = { firstName: 'Pere', lastName: 'Pages' } aPerson.fistName = 'Pear' // from 'Pere' to 'Pear' aPerson.middleName = 'Joan' // from 'undefined' to 'Joan' "},{"title":"Reference","type":1,"pageTitle":"Javascript Objects","url":"js-objects#reference","content":"Objects are passed around by reference. They are never copied. Copy const bar = { a: 1, b: 2 } const foo = { ref: bar } foo.ref.a = 3 console.log(bar.a) // 3 "},{"title":"Prototype","type":1,"pageTitle":"Javascript Objects","url":"js-objects#prototype","content":"Every object is linked to a prototype object from which it can inherit properties (a). All objects create from object literals are linked to Object.prototype, an object that comes standard with Javascript. The prototype link has no effect on updating. When we make changes to an object, the object's prototype is not touched (b). The prototype link is used only in retrieval. If we try to retrieve a property value from an object, and if the object lacks the property name, then Javascript attempts to retrieve the property value from the prototype object. This is called delegation (c). Copy const bar = { a: 1, b: 2 } const foo = Object.create(bar) // example of (a) console.log(foo) // {} console.log(foo.a) // 1; example of (c) console.log(foo.__proto__.a) // 1 bar.a = 3 console.log(foo.a) // 3 foo.a = 5 // example of (b) console.log(foo.a) // 5 console.log(bar.a) // 3 delete foo.a // true; no longer foo has -a- as an -ownProperty- console.log(foo.a) // 3; example of (c) "},{"title":"Reflection","type":1,"pageTitle":"Javascript Objects","url":"js-objects#reflection","content":"Copy const bar = { a: 1, b: 2 } const aPerson = { firstName: 'Pere', lastName: 'Pages' } typeof bar.a // 'number' typeof bar.b // 'number' typeof aPerson.firstName // 'string' Copy const bar = { a: 1, b: 2 } const foo = Object.create(bar) bar.hasOwnProperty('a') // true foo.hasOwnProperty('a') // false console.log(foo.a) // 1 "},{"title":"Enumeration: for in, Object.keys and Object.values","type":1,"pageTitle":"Javascript Objects","url":"js-objects#enumeration-for-in-objectkeys-and-objectvalues","content":"The for in statement can loop over all the property names in an object. Object.keys only will get the hasOwnProperty(key) === true. Copy const bar = { a: 1, b: 2, m1: () => 'hello' } const foo = Object.create(bar) foo.c = 3 foo.d = 4 const geez = Object.create(foo) for (let name in foo) { console.log(name) } // c, d, a, b, m1 for (let name in foo) { console.log(foo.hasOwnProperty(name)) } // true, true, false, false, false for (let name in geez) { console.log(geez.hasOwnProperty(name)) } // false, false, false, false, false console.log(Object.keys(bar)) // ['a', 'b', 'm1'] console.log(Object.keys(foo)) // ['c', 'd'] console.log(Object.keys(geez)) // [] console.log(Object.values(bar)) // ['a', 'b', function] "},{"title":"Keys","type":1,"pageTitle":"Javascript Objects","url":"js-objects#keys","content":"The Object.keys(object)function can take all of the names of the own (but not inherited) properties in an object and return them as an array of strings. The strings in the array will be in the order in which they were inserted. "},{"title":"Delete","type":1,"pageTitle":"Javascript Objects","url":"js-objects#delete","content":"The delete operator can be used to remove a property from an object. It will remove a property from the object if it has one. It will not touch any of the objects in the prototype linkage. see delete example in the prototype section. "},{"title":"Inheritance","type":1,"pageTitle":"Javascript Objects","url":"js-objects#inheritance","content":"In Javascript, an object can be made that inherits from another object Object.create(prototype). When assigning to an object, only the top-most object is changed. No changes are made to objects on the prototype chain. The most popular use of prototypes is as a place to store functions. Object.create(prototype) inherits from the prototype parameter object and the Object.prototype. But Object.create(null) does not inherit any thing. Object.assign(Object.create({}), prototype) is preferable to Object.create(prototype). It is all about how much you want to 'inherit'. Object.create({}) does not inherit from Object.prototype but {} the Object literal does (check to proto property). "},{"title":"toString","type":1,"pageTitle":"Javascript Objects","url":"js-objects#tostring","content":"If you want to convert an object into a string JSON.stringify does a much better job. Copy JSON.stringify(myObj, null, 2) "},{"title":"Copy","type":1,"pageTitle":"Javascript Objects","url":"js-objects#copy","content":"Copy const bar = { a: 1, b: 2 } const foo = Object.assign({}, bar) Copy const bar = { a: 1, b: 2 } const foo = {...bar} "},{"title":"Freeze","type":1,"pageTitle":"Javascript Objects","url":"js-objects#freeze","content":"Object.freeze(object). This is not a deep freeze. Only the top level object is frozen. "},{"title":"WeakMap","type":1,"pageTitle":"Javascript Objects","url":"js-objects#weakmap","content":"Allows objects as keys. "},{"title":"Resources","type":1,"pageTitle":"Javascript Objects","url":"js-objects#resources","content":"Javascript The Good Parts (2008) by Douglas CrockfordHow Javascript Works (2018) by Douglas Crockford "},{"title":"MySQL database with Docker","type":0,"sectionRef":"#","url":"mysql-with-docker","content":"","keywords":""},{"title":"Installing an image","type":1,"pageTitle":"MySQL database with Docker","url":"mysql-with-docker#installing-an-image","content":"Copy # latest docker pull mysql # or any version using semantic versioning docker pull mysql:8.0.22 "},{"title":"Launching the container","type":1,"pageTitle":"MySQL database with Docker","url":"mysql-with-docker#launching-the-container","content":"All Docker CLI commands start with docker and an instruction such as run followed by options. docker run creates a container from a specified image ( mysql ) and starts it. That image is downloaded if it’s not already available on the host. Copy docker run \\ -it --rm --name mysql \\ -p 3306:3306 \\ --mount \"src=mysqldata,target=/var/lib/mysql\" \\ -e MYSQL_ROOT_PASSWORD=mysecret \\ mysql The command runs the container in the foreground, removes it at the end, gives it a name of mysql maps the port 3306 of the host to the 3306 of the container, mounts a volume with the name mysqldata and sets an environment variable called MSQL_ROOT_PASSWORD. Once the database container has started, you can use any MySQL client application installed on your host PC to connect to localhost:3306 with the user ID root and password mysecret. "},{"title":"Most used options","type":1,"pageTitle":"MySQL database with Docker","url":"mysql-with-docker#most-used-options","content":"option\tdescription-d\trun a container as a background process (which exits when the application ends) -it\tInteractive mode. It keeps a container running in the foreground (even after the application ends), and show an activity log --rm\tremove the container after it stops --name\tname a container (a random GUID is used otherwise) -p\tmap a host port to a container port --mount\tcreate a persistent Docker-managed volume to retain data. The string specifies a src volume name and a target where it is mounted in the container’s file system -v\tmount a host folder using the notation <hostdir>:<containerdir> -e\tdefine an environment variable --env-file\tread environment variables from a file where each line defines a VAR=value --net\tconnect to specific Docker network --entrypoint\toverrides the default starting application If you do not specify --rm , the container will remain available even once it has stopped. Although it is possible to restart it, there’s rarely any benefit – it’s simpler to execute the same docker run command again. "},{"title":"Connect to the database using Adminer Mysql Client","type":1,"pageTitle":"MySQL database with Docker","url":"mysql-with-docker#connect-to-the-database-using-adminer-mysql-client","content":"If you don’t have a MySQL client to hand, Adminer is a lightweight PHP-based option. It is also available as a Docker image and can be launched in another terminal with: Copy docker run \\ -it --rm --name adminer \\ -p 8080:8080 \\ adminer The image will be downloaded automatically, otherwise you can install it as shown previously. Now you can type in the browser http://localhost:8080. Note that you cannot use localhostas the server name since Adminer will resolve that to its own container! Instead these are the options: Enter host.docker.internal. Docker Desktop routes this domain to your PC's network IP address, but it may not be available on all systems.Use your actual network IP address. This can be obtained with the ``ìfconfig``` command on macOS.Or us the container's IP address assigned by Docker. Docker creates it's own virtual network. docker inspect mysqlreturns information about the container in JS_ON format. You can locate the 'IPAddress' value suing the -f format option. Copy docker inspect \\ -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' \\ mysql Alternatively, you can define a Docker network which containers can connect to. Any container can then use the name of another container name and have it resolve correctly, i.e. you can enter mysql as the server name on the Adminer login screen. "},{"title":"Connect to a container shell","type":1,"pageTitle":"MySQL database with Docker","url":"mysql-with-docker#connect-to-a-container-shell","content":"Every Docker container runs an isolated Linux environment. You can connect to its shell to run commands, examine logs, or perform any other activities. Remember containers are stateless! Any changes you make will be lost whenever the container is restarted. Copy # Presuming your MySQL container is still running, open another terminal and enter docker exec -it mysql bash Some lightweight images using Alpine Linux do not offer the bash shell. If this command fails, try using docker exec -it mysql sh instead. Copy mysql -u root -pmysecret Enter exit to quit the shell. "},{"title":"List, pause/unpause, stop and restart containers","type":1,"pageTitle":"MySQL database with Docker","url":"mysql-with-docker#list-pauseunpause-stop-and-restart-containers","content":""},{"title":"List","type":1,"pageTitle":"MySQL database with Docker","url":"mysql-with-docker#list","content":"Copy docker container ls # or docker ps Each container is assigned a hexadecimal ID which can be used as a reference in Docker commands. However, specifying a container --name makes management considerably easier. To view all containers, both running and stopped, enter: Copy docker container ls -a "},{"title":"Restart","type":1,"pageTitle":"MySQL database with Docker","url":"mysql-with-docker#restart","content":"Copy docker container restart adminer mysql "},{"title":"Pause/Unpause","type":1,"pageTitle":"MySQL database with Docker","url":"mysql-with-docker#pauseunpause","content":"Copy docker container pause mysql Copy docker container unpause mysal "},{"title":"Stop","type":1,"pageTitle":"MySQL database with Docker","url":"mysql-with-docker#stop","content":"Containers which stared with the -rm option are removed when they are stopped. You can list all containers with docker ps -a. Copy docker container stop adminer mysql "},{"title":"Remove","type":1,"pageTitle":"MySQL database with Docker","url":"mysql-with-docker#remove","content":"Copy docker container prune "},{"title":"Define a Docker network","type":1,"pageTitle":"MySQL database with Docker","url":"mysql-with-docker#define-a-docker-network","content":"Generally it is easier to refer to another container using its --namethen its IP. Stop any running containers then create a new network, e.g. named mysqlnet here: Copy docker network create --driver bridge mysqlnet Any container can connect to this network using the --net option when it is launched. Copy docker run \\ -d --rm --name mysql \\ -p 3306:3306 \\ --mount \"src=mysqldata,target=/var/lib/mysql\" \\ -e MYSQL_ROOT_PASSWORD=mysecret \\ --net mysqlnet \\ mysql Copy docker run \\ -d --rm --name adminer \\ -p 8080:8080 \\ --net mysqlnet \\ adminer Each container’s name now resolves on the Docker mysqlnet network. You can therefore enter mysql as the server name on the Adminer login screen. "},{"title":"Cleaning up","type":1,"pageTitle":"MySQL database with Docker","url":"mysql-with-docker#cleaning-up","content":""},{"title":"Statistics","type":1,"pageTitle":"MySQL database with Docker","url":"mysql-with-docker#statistics","content":"Copy docker system df "},{"title":"List containers, images, volmes and networks","type":1,"pageTitle":"MySQL database with Docker","url":"mysql-with-docker#list-containers-images-volmes-and-networks","content":"Copy docker container ls -a Copy docker image ls -a Copy docker volume ls Copy docker network ls "},{"title":"Remove unused networks and images","type":1,"pageTitle":"MySQL database with Docker","url":"mysql-with-docker#remove-unused-networks-and-images","content":"Copy docker system prune The following command will do the same and also wipe any image not associated with a running container: Copy docker system prune -a The latest images will therefore have to be downloaded again if you require them. "},{"title":"Deleting disk volumes","type":1,"pageTitle":"MySQL database with Docker","url":"mysql-with-docker#deleting-disk-volumes","content":"Assuming you’re happy to proceed, you can view Docker volumes with: Copy docker volume ls then delete any by ID or name: Copy docker volume rm <name> Unused Docker volumes –those not currently attached to a running container– can be removed with: Copy docker volume prune Alternatively, use docker volume prune -a will delete them all. You only have yourself to blame!... "},{"title":"Full clean start","type":1,"pageTitle":"MySQL database with Docker","url":"mysql-with-docker#full-clean-start","content":"Copy docker system prune -a --volumes Add -f if you want to force the wipe without a confirmation prompt. "},{"title":"Launch multiple containers with Docker Compose","type":1,"pageTitle":"MySQL database with Docker","url":"mysql-with-docker#launch-multiple-containers-with-docker-compose","content":"Docker Compose provides a way to build and launch containers, networks, and volumes from a single configuration file named docker-compose.yml. Copy version: '3' services: mysql: image: mysql container_name: mysql environment: - MYSQL_ROOT_PASSWORD=mysecret volumes: - mysqldata:/var/lib/mysql ports: - \"3306:3306\" networks: - mysqlnet restart: on-failure adminer: image: adminer container_name: adminer depends_on: - mysql ports: - \"8080:8080\" networks: - mysqlnet restart: on-failure volumes: mysqldata: networks: mysqlnet: Now launch Docker Compose from the same directory as your docker-compose.yml file using: Copy docker-compose up "},{"title":"Running on the background","type":1,"pageTitle":"MySQL database with Docker","url":"mysql-with-docker#running-on-the-background","content":"Copy docker-compose up -d "},{"title":"Stop","type":1,"pageTitle":"MySQL database with Docker","url":"mysql-with-docker#stop-1","content":"Copy docker compose stop "},{"title":"Offline search for docusaurus","type":0,"sectionRef":"#","url":"offline-search-for-docusaurus","content":"","keywords":""},{"title":"Sample","type":1,"pageTitle":"Offline search for docusaurus","url":"offline-search-for-docusaurus#sample","content":") "},{"title":"Prerequisites","type":1,"pageTitle":"Offline search for docusaurus","url":"offline-search-for-docusaurus#prerequisites","content":"worker_thread is needed, suggested node version > 12.X For older version of node use docusaurus-lunr-search version 2.1.0(npm i docusaurus-lunr-search@2.1.0) "},{"title":"How to Use ?","type":1,"pageTitle":"Offline search for docusaurus","url":"offline-search-for-docusaurus#how-to-use-","content":"Install this package Copy npm i docusaurus-lunr-search --save Then run npm install to update, build, and link the packages Copy npm install Then run docusaurus swizzle Copy npm run swizzle docusaurus-lunr-search SearchBar -- --danger Add the docusaurus-lunr-search plugin to your docusaurus.config.js Copy module.exports = { // ... plugins: [require.resolve('docusaurus-lunr-search')], } Then build your Docusaurus project Copy npm run build Serve your application Copy npx http-server ./build Note: Docusaurus search information can only be generated from a production build. Local development is currently not supported. "},{"title":"Language options","type":1,"pageTitle":"Offline search for docusaurus","url":"offline-search-for-docusaurus#language-options","content":"Copy module.exports = { // ... plugins: [[ require.resolve('docusaurus-lunr-search'), { languages: ['en', 'de'] // language codes }], } Supports all the language listed here https://github.com/MihaiValentin/lunr-languages "},{"title":"Other options","type":1,"pageTitle":"Offline search for docusaurus","url":"offline-search-for-docusaurus#other-options","content":""},{"title":"excludeRoutes","type":1,"pageTitle":"Offline search for docusaurus","url":"offline-search-for-docusaurus#excluderoutes","content":"You can exclude certain routes from the search by using this option: Copy module.exports = { // ... plugins: [ [require.resolve('docusaurus-lunr-search'), { excludeRoutes: [ 'docs/changelogs/**/*', // exclude changelogs from indexing ] }] ], } "},{"title":"indexBaseUrl","type":1,"pageTitle":"Offline search for docusaurus","url":"offline-search-for-docusaurus#indexbaseurl","content":"Base url will not indexed by default, if you want to index the base url set this option to true Copy module.exports = { // ... plugins: [ [require.resolve('docusaurus-lunr-search'), { indexBaseUrl: true } ] ], } Thanks to algolia/docsearch.js, I modified it to create this search component And thanks cmfcmf, I used the code from his library docusaurus-search-local for multi-language support. "},{"title":"Changelog","type":1,"pageTitle":"Offline search for docusaurus","url":"offline-search-for-docusaurus#changelog","content":"Checkout the releases page for changelog. "},{"title":"Resources","type":1,"pageTitle":"Offline search for docusaurus","url":"offline-search-for-docusaurus#resources","content":"docusaurus-lunr-search "},{"title":"Programming Jokes","type":0,"sectionRef":"#","url":"programming-jokes","content":"","keywords":""},{"title":"Resources","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#resources","content":"Best Programming Jokes30 Jokes Only Programmers Will GetProgramming Jokes: Top 20 Funniest Jokes Only Programmers will getWhat's the best programming joke that you know? "},{"title":"Jokes","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#jokes","content":""},{"title":"VPN","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#vpn","content":" "},{"title":"Loops","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#loops","content":"Copy Q. How did the programmer die in the shower? A. He read the shampoo bottle instructions: Lather. Rinse. Repeat. Copy A Programmer was walking out of door for work, his wife said “while you’re out, buy some milk” and he never came home. ps. That took me a while to get. "},{"title":"Light bulb","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#light-bulb","content":"Copy How many programmers does it take to change a light bulb? None – It’s a hardware problem "},{"title":"Java","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#java","content":"Copy “Knock, knock.” “Who’s there?” very long pause…. “Java.” Copy Some people see a problem and think \"I know, I'll use Java!\". Now they have a ProblemFactory. Copy Q: Why do Java programmers wear glasses? A: Because they don't C#! "},{"title":"Warnings","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#warnings","content":"Copy A man is smoking a cigarette and blowing smoke rings into the air. His girlfriend becomes irritated with the smoke and says, “Can’t you see the warning on the cigarette pack? Smoking is hazardous to your health!” To which the man replies, “I am a programmer. We don’t worry about warnings; we only worry about errors.” "},{"title":"npm","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#npm","content":"Copy 1/3 of US bandwith is used by Netflix... the rest is used by `rm -rf node_modules && npm install` "},{"title":"Logical operators","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#logical-operators","content":"Copy GF: All you ever talk about is Programming Jokes! I am sick of it! It’s me or your Programming Jokes! Me: You meant to say it’s you XOR my Programming Jokes. GF: I am leaving you. "},{"title":"Race Conditions","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#race-conditions","content":"Copy Knock knock. Race condition. Who's there? "},{"title":"TCP / UDP","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#tcp--udp","content":"Copy What's the best part about TCP jokes? I get to keep telling them until you get them. ps. I've got a really good UDP joke to tell you, but I don't know if you'll get it "},{"title":"if / else","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#if--else","content":"Copy A programmer puts two glasses on his bedside table before going to sleep. A full one, in case he gets thirsty, and an empty one, in case he doesn’t. "},{"title":"Management","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#management","content":"Copy A man flying in a hot air balloon suddenly realizes he’s lost. He reduces height and spots a man down below. He lowers the balloon further and shouts to get directions, \"Excuse me, can you tell me where I am?\" The man below says: \"Yes. You're in a hot air balloon, hovering 30 feet above this field.\" \"You must work in Information Technology,\" says the balloonist. \"I do\" replies the man. \"How did you know?\" \"Well,\" says the balloonist, \"everything you have told me is technically correct, but It's of no use to anyone.\" The man below replies, \"You must work in management.\" \"I do,\" replies the balloonist, \"But how'd you know?\"* \"Well\", says the man, \"you don’t know where you are or where you’re going, but you expect me to be able to help. You’re in the same position you were before we met, but now it’s my fault.\" "},{"title":"Octals","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#octals","content":"Copy Why do programmers confuse halloween and christmas? Because Oct 31 = Dec 25. "},{"title":"Naming","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#naming","content":"Copy Two programmers get into a foo "},{"title":"Project Management","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#project-management","content":"Copy Q: What did the Project Manager say to the Programmer? A: You start coding, I'll go find out what they want. Copy At a recent computer software engineering management course, the participants were given an awkward question to answer: \"If you had just boarded an airliner and discovered that your team of programmers had been responsible for the flight control software, how many of you would disembark immediately?\" Among the ensuing forest of raised hands only one man sat motionless. When asked what he would do, he replied that he would be quite content to stay aboard. With his team's software, he said, the plane was unlikely to even taxi as far as the runway, let alone take off. "},{"title":"Demos","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#demos","content":" "},{"title":"Reduce Usage Examples","type":0,"sectionRef":"#","url":"reduce","content":"","keywords":""},{"title":"Map","type":1,"pageTitle":"Reduce Usage Examples","url":"reduce#map","content":"Copy function map(fn, arr) { return arr.reduce((acc, item, index, arr) => { return acc.concat(fn(item, index, arr)) }, []) } "},{"title":"Filter","type":1,"pageTitle":"Reduce Usage Examples","url":"reduce#filter","content":"Copy function filter(fn, arr) { return arr.reduce((newArr, item) => { return fn(item) ? newArr.concat([item]) : newArr }, []) } "},{"title":"Compose","type":1,"pageTitle":"Reduce Usage Examples","url":"reduce#compose","content":"Copy function compose(...fns) { return x => fns.reduceRight((v, f) => f(v), x) } "},{"title":"Pipe","type":1,"pageTitle":"Reduce Usage Examples","url":"reduce#pipe","content":"Copy function compose(...fns) { return x => fns.reduce((v, f) => f(v), x) } "},{"title":"Romulo Cintra's youtube channel","type":0,"sectionRef":"#","url":"romulo-cintra-youtube-channel","content":"I am very happy to have the chance to follow this youtube channel from my good friend Romulo Cintra. https://www.youtube.com/channel/UCW4imJoguoKQqJEilKKGuFQ?","keywords":""},{"title":"Resizing markdown images","type":0,"sectionRef":"#","url":"resizing-markdown-images","content":"After many attempts I have come to the conclusion that the best way is doing through css. And the cleanest way is to use the alt attribute. In the example I am using thumb and thumb autor to style the images. Copy ![thumb Javascript for Kids](../static/blog/2020/12/13/javascsript-for-kids.jpg) &nbsp; ![thumb autor Nick Morgan](../static/blog/2020/12/13/nick-morgan.png) And that is what we write in the .css Copy img[alt^=thumb] { width: 100px; } img[alt^=\"thumb autor\"] { width: 100px; border-radius: 50%; }","keywords":""},{"title":"Testing a React component when unmounting with testing-library","type":0,"sectionRef":"#","url":"testing-a-react-component-when-unmounting-with-testing-library","content":"","keywords":""},{"title":"The Component","type":1,"pageTitle":"Testing a React component when unmounting with testing-library","url":"testing-a-react-component-when-unmounting-with-testing-library#the-component","content":"Copy import React, { useEffect } from 'react' import PropTypes from 'prop-types' import { I18n } from 'react-redux-i18n' import { ErrorWrapper } from './ErrorWrapper' export function ServerErrorMessage ({ message, clearServerSideValidation }) { useEffect(() => clearServerSideValidation, [clearServerSideValidation]) return message ? (<ErrorWrapper> {message.startsWith('validators.') ? I18n.t(message) : I18n.t('common.unknownError')} </ErrorWrapper>) : null } ServerErrorMessage.propTypes = { message: PropTypes.string, clearServerSideValidation: PropTypes.func } ServerErrorMessage.defaultProps = { message: '' } "},{"title":"The test (with Jest and testing-library)","type":1,"pageTitle":"Testing a React component when unmounting with testing-library","url":"testing-a-react-component-when-unmounting-with-testing-library#the-test-with-jest-and-testing-library","content":"Copy import React from 'react' import { render, waitFor } from '@testing-library/react' import { ServerErrorMessage } from './ServerErrorMessage' const STANDARD_TRANSLATED_ERROR_MESSAGE = \"Sorry, there has been a temporary error which means you can't perform this action right now. Please try again.\" describe('<ServerErrorMessage>', () => { describe('message cannot be found in the translations', () => { const spy = jest.fn() const renderContext = render(<ServerErrorMessage message={'this message cannot be found in the translations'} clearServerSideValidation={spy} />) const alert = renderContext.getByRole('alert') test('we display the STANDARED_TRANSLATED_ERROR_MESSAGE', () => { expect(alert.textContent).toBe(STANDARD_TRANSLATED_ERROR_MESSAGE) }) test('we call the clearFunction when unmounting the component', async (done) => { renderContext.unmount() await waitFor(() => expect(spy).toHaveBeenCalled()) done() }) }) describe('the message has a translation', () => { test('we call display the translation', () => { const knownTranslation = 'validators.url' const TRANSLATION = 'Absolute URLs must start with https://.' const renderContext = render(<ServerErrorMessage message={knownTranslation} clearServerSideValidation={jest.fn()} />) const alert = renderContext.getByRole('alert') expect(alert.textContent).toBe(TRANSLATION) }) }) }) "},{"title":"Yup validation with file type and size","type":0,"sectionRef":"#","url":"yup-validation-with-file-type-and-size","content":"","keywords":""},{"title":"Resources","type":1,"pageTitle":"Yup validation with file type and size","url":"yup-validation-with-file-type-and-size#resources","content":"https://github.com/formium/formik/issues/926Formik — Handling files and reCaptchaSandbox Example "},{"title":"Example","type":1,"pageTitle":"Yup validation with file type and size","url":"yup-validation-with-file-type-and-size#example","content":"The trick is to use mixed schema to be able to access the file object. Copy const FILE_SIZE = 160 * 1024 const SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg', 'image/gif', 'image/png'] const iconFileSchema = Yup.mixed() .test('fileSize', 'File size is too large', value => value.size <= FILE_SIZE) .test('fileType', 'Unsupported File Format', value => SUPPORTED_FORMATS.includes(value.type)) "},{"title":"The Builder pattern","type":0,"sectionRef":"#","url":"the-builder-pattern","content":"","keywords":""},{"title":"The issue","type":1,"pageTitle":"The Builder pattern","url":"the-builder-pattern#the-issue","content":"Creating an object with too many arguments, using new and not returning a plain object. Copy const frog = new Frog(\"Bob\", 9, 2.2, \"male\"); "},{"title":"Using a class builder","type":1,"pageTitle":"The Builder pattern","url":"the-builder-pattern#using-a-class-builder","content":"With a class builder you can use setters, so the arguments are explicit. Copy class FrogBuilder { constructor(name, gender) { this.name = name; this.gender = gender; } setWeight(weight) { this.weight = weight; return this; } setHeight(height) { this.height = height; return this; } build() { if (!(\"weight\" in this)) { throw new Error(\"Weight is missing\"); } if (!(\"height\" in this)) { throw new Error(\"Height is missing\"); } return { name: this.name, weight: this.weight, height: this.height, gender: this.gender, }; } } And here you have it looks now: Copy const leon = new FrogBuilder(\"Leon\", \"male\") .setWeight(14) .setHeight(3.7) .build(); "},{"title":"Without class","type":1,"pageTitle":"The Builder pattern","url":"the-builder-pattern#without-class","content":"The same implementation without using class Copy function FrogBuilder(name, gender) { this.name = name; this.gender = gender; this.setWeight = (weight) => { this.weight = weight; return this }; this.setHeight = (height) => { this.height = height; return this }; this.build = () => { if (!(\"weight\" in this)) { // see usage in info throw new Error(\"Weight is missing\"); } if (!(\"height\" in this)) { throw new Error(\"Height is missing\"); } return { name: this.name, weight: this.weight, height: this.height, gender: this.gender, }; }; } info How to use in operator Copy const leon = new FrogBuilder(\"Leon\", \"male\") .setWeight(14) .setHeight(3.7) .build(); "},{"title":"Purely functional","type":1,"pageTitle":"The Builder pattern","url":"the-builder-pattern#purely-functional","content":"This is my favorite because I am not a fan of new. Copy function frogBuilder({name, weight, height, gender} = {}) { return { build: () => {{ name, weight, height, gender }), setName: (name) => frogBuilder({name}), setWeight: (weight) => frogBuilder({weight}), setHeight: (height) => frogBuilder({height}), setGender: (gender) => frogBuilder({gender}), } } Copy const leon = frogBuilder() .setName('Leon') .setGender('male') .setWeight(14) .setHeight(3.7) .build() "},{"title":"Powered by MDX","type":0,"sectionRef":"#","url":"docs/mdx","content":"You can write JSX and use React components within your Markdown thanks to MDX. Docusaurus green and Facebook blue are my favorite colors. I can write Markdown alongside my JSX!","keywords":""},{"title":"Style Guide","type":0,"sectionRef":"#","url":"docs/","content":"","keywords":""},{"title":"Markdown Syntax","type":1,"pageTitle":"Style Guide","url":"docs/#markdown-syntax","content":"To serve as an example page when styling markdown based Docusaurus sites. "},{"title":"Headers","type":1,"pageTitle":"Style Guide","url":"docs/#headers","content":"H1 - Create the best documentation# "},{"title":"H2 - Create the best documentation","type":1,"pageTitle":"Style Guide","url":"docs/#h2---create-the-best-documentation","content":""},{"title":"H3 - Create the best documentation","type":1,"pageTitle":"Style Guide","url":"docs/#h3---create-the-best-documentation","content":"H4 - Create the best documentation# H5 - Create the best documentation# H6 - Create the best documentation#  "},{"title":"Emphasis","type":1,"pageTitle":"Style Guide","url":"docs/#emphasis","content":"Emphasis, aka italics, with asterisks or underscores. Strong emphasis, aka bold, with asterisks or underscores. Combined emphasis with asterisks and underscores. Strikethrough uses two tildes. Scratch this.  "},{"title":"Lists","type":1,"pageTitle":"Style Guide","url":"docs/#lists","content":"First ordered list itemAnother item Unordered sub-list. Actual numbers don't matter, just that it's a number Ordered sub-list And another item. Unordered list can use asterisks Or minuses Or pluses  "},{"title":"Links","type":1,"pageTitle":"Style Guide","url":"docs/#links","content":"I'm an inline-style link I'm an inline-style link with title I'm a reference-style link You can use numbers for reference-style link definitions Or leave it empty and use the link text itself. URLs and URLs in angle brackets will automatically get turned into links. http://www.example.com/ or http://www.example.com/ and sometimes example.com (but not on GitHub, for example). Some text to show that the reference links can follow later.  "},{"title":"Images","type":1,"pageTitle":"Style Guide","url":"docs/#images","content":"Here's our logo (hover to see the title text): Inline-style:  Reference-style:  Images from any folder can be used by providing path to file. Path should be relative to markdown file.   "},{"title":"Code","type":1,"pageTitle":"Style Guide","url":"docs/#code","content":"Copy var s = 'JavaScript syntax highlighting'; alert(s); Copy s = \"Python syntax highlighting\" print(s) Copy No language indicated, so no syntax highlighting. But let's throw in a <b>tag</b>. Copy function highlightMe() { console.log('This line can be highlighted!'); }  "},{"title":"Tables","type":1,"pageTitle":"Style Guide","url":"docs/#tables","content":"Colons can be used to align columns. Tables\tAre\tCoolcol 3 is\tright-aligned\t\\$1600 col 2 is\tcentered\t\\$12 zebra stripes\tare neat\t\\$1 There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown. Markdown\tLess\tPrettyStill\trenders\tnicely 1\t2\t3  "},{"title":"Blockquotes","type":1,"pageTitle":"Style Guide","url":"docs/#blockquotes","content":"Blockquotes are very handy in email to emulate reply text. This line is part of the same quote. Quote break. This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can put Markdown into a blockquote.  "},{"title":"Inline HTML","type":1,"pageTitle":"Style Guide","url":"docs/#inline-html","content":"Definition list Is something people use sometimes. Markdown in HTML Does *not* work **very** well. Use HTML tags.  "},{"title":"Line Breaks","type":1,"pageTitle":"Style Guide","url":"docs/#line-breaks","content":"Here's a line for us to start with. This line is separated from the one above by two newlines, so it will be a separate paragraph. This line is also a separate paragraph, but... This line is only separated by a single newline, so it's a separate line in the same paragraph.  "},{"title":"Admonitions","type":1,"pageTitle":"Style Guide","url":"docs/#admonitions","content":"note This is a note tip This is a tip important This is important caution This is a caution warning This is a warning "}]