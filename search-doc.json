[{"title":"Change mac folder icons","type":0,"sectionRef":"#","url":"change-mac-folder-icons","content":"Basically, copy the contents of an image and paste it in the icon of the folder description (get info) https://support.apple.com/es-es/guide/mac-help/mchlp2313/mac","keywords":""},{"title":"Conditional validation with Yup and Formik","type":0,"sectionRef":"#","url":"conditional-validation-with-yup-and-formik","content":"https://stackoverflow.com/questions/54919228/conditional-validation-with-yup-and-formik The trick for doing conditional validation is to be part of a bigger validation schema. Copy const validationSchema = Yup.object() .shape({ isCompany: Yup.boolean() companyName: Yup.string() }) We want to conditionally validate companyName using isCompany value. Copy const validationSchema = Yup.object() .shape({ isCompany: Yup.boolean() companyName: Yup.string() .when('isCompany', { is: true, // it can also be a 'function', e.g. function (isCompany) { return assertion } then: Yup.string().required('Field is required'), otherwise: Yup.string() }) })","keywords":""},{"title":"Deep equality in js Objects","type":0,"sectionRef":"#","url":"deep-equality-in-js-objects","content":"How to Compare Objects in JavaScript The deep equality is similar to the shallow equality, but with one difference. During the shallow check, if the compared properties are objects, a recursive shallow equality check is performed on these nested objects. Copy function deepEqual(object1, object2) { const keys1 = Object.keys(object1); const keys2 = Object.keys(object2); if (keys1.length !== keys2.length) { return false; } for (const key of keys1) { const val1 = object1[key]; const val2 = object2[key]; const areObjects = isObject(val1) && isObject(val2); if ( areObjects && !deepEqual(val1, val2) || !areObjects && val1 !== val2 ) { return false; } } return true; } function isObject(object) { return object != null && typeof object === 'object'; }","keywords":""},{"title":"Absolute paths in js projects","type":0,"sectionRef":"#","url":"absolute-paths-in-js-projects","content":"","keywords":""},{"title":"Resources","type":1,"pageTitle":"Absolute paths in js projects","url":"absolute-paths-in-js-projects#resources","content":"Solve Module Import Aliasing for Webpack, Jest, and VSCodeUsing webpack aliasesMake VS code read webpack.config and recognize path with alias?resolve.alias "},{"title":"How to (know where to find the files)","type":1,"pageTitle":"Absolute paths in js projects","url":"absolute-paths-in-js-projects#how-to-know-where-to-find-the-files","content":"In the three scenarios we are replicating the logic concerning where to find the files. We need the bundler (webpack) to know where to find the filesWe need our testing framework (jest) to know where to find the filesWe need our IDE (visual studio code) to know where to find the files "},{"title":"1. Webpack","type":1,"pageTitle":"Absolute paths in js projects","url":"absolute-paths-in-js-projects#1-webpack","content":"We need to tell webpack how to resolve our absolute paths. Copy const path = require('path'); module.exports = { //... resolve: { alias: { Utilities: path.resolve(__dirname, 'src/utilities/'), Templates: path.resolve(__dirname, 'src/templates/') } } }; another example Copy // webpack.config.base.js const path = require('path') module.exports = { // ... resolve: { alias: { 'react-dom': '@hot-loader/react-dom', 'Cms': path.resolve(__dirname, '..', 'src'), 'Test': path.resolve(__dirname, '..', 'test') } } } "},{"title":"2. Jest","type":1,"pageTitle":"Absolute paths in js projects","url":"absolute-paths-in-js-projects#2-jest","content":"In the package.json file we can add a section for the jest module resolver. Copy { \"name\": \"acme\", \"version\": \"1.0.0\", \"description\": \"Acme App\", \"jest\": { \"testMatch\": [ \"**/?(*.)+(test).js\", \"**/?(*.)+(it).js\" ], \"testURL\": \"https://test.com/\", \"collectCoverage\": true, \"coverageDirectory\": \"../build/coverage\", \"coverageReporters\": [ \"html\", \"lcov\" ], \"collectCoverageFrom\": [ \"src/**/*.js\", \"**/*.test.js\" ], \"transform\": { \"^.+\\\\.js$\": \"babel-jest\" }, \"setupFiles\": [ \"raf/polyfill\", \"<rootDir>/test/unit/config/imageOnLoadFix.js\", \"<rootDir>/test/unit/config/windowScrollToFix.js\", \"<rootDir>/test/unit/config/messagesConfig.js\", \"<rootDir>/test/unit/config/setupTests.js\", \"<rootDir>/test/unit/config/propTypesValidatator.js\" ], \"snapshotSerializers\": [ \"<rootDir>/node_modules/enzyme-to-json/serializer\" ], \"moduleNameMapper\": { \"\\\\.svg$\": \"<rootDir>/test/unit/__mocks__/fileMock.js\", \"\\\\.(css|less|scss|sss|styl)$\": \"<rootDir>/node_modules/jest-css-modules\", \"^Cms(.*)$\": \"<rootDir>/src$1\", \"^Test(.*)$\": \"<rootDir>/test$1\" } }, "},{"title":"3. Visual Studio Code","type":1,"pageTitle":"Absolute paths in js projects","url":"absolute-paths-in-js-projects#3-visual-studio-code","content":"We need to create a jsconfig.json that visual studio code will use for its intellisense. Copy { \"compilerOptions\": { \"baseUrl\": \"./\", \"paths\": { \"Cms/*\" :[\"src/*\"], \"Test/*\": [\"test/*\"] } }, \"exclude\": [\"node_modules\", \"build\"] } "},{"title":"Functional Programming Useful Definitions","type":0,"sectionRef":"#","url":"definitions","content":"Closures A closure is the bundling of a function with its lexical environment. Closures are created at runtime during function creation time. Closures are how partial applications get their fixed arguments. Compose Copy const compose = (...fns) => x => fns.reduceRight((y, f) => f(y), x) Currying A curried function is a function that takes multiple parameters one at a time, by taking the first argument, and returning a series of functions which each take the next argument until all the parameters have been fixed, and the function application can complete, at which point, the resulting value si returned. Data Last Style where you take the specializing parameters first, and take the data the function will act last. Destructuring Copy const [t, u] = ['hello', 'world'] t // 'hello' u // 'world' Copy const { blop: blep } = { blop: 'hello world' } blep // 'hello world' Expression is a piece of code which evaluates to some value. First class functions The ability to use functions as data values. First order function don't take function as an argument or returns a function as output. Flip Copy const flip = fn => a => b => fn(b)(a) Functor is a data structure that can be mapped over. In other words, it's container which has an interface which can be used to apply a function to the values inside it. Higher order function is any function tat takes a function as an argument, returns a function or both. Immutability An immutable object is an object that can't be modified after it's created. Method A method is a function associated with an object. Non-determinism parallel processing + mutable state. Partial application it's a function which has some arguments fixed inside its closure scope. A function with some of its parameters fixed is to be partially applied All curried functions return partial applications. it's a function which has already been applied to some - but not yet all - of its arguments. The arguments which the function has already been applied to are called fixed parameters. Pipe Copy const pipe = (...fns) => x => fns.reduce((y, f) => f(y), x) Point-free style is a style of programming where function definitions do not make reference to the function's arguments. Pure functions given the same input, will always return the same output. Produce no side effects. Reduce (aka: fold, accumulate, reduceLeft) lets you iterate over a list, applying a function to an accumulated value and the next item in the list, until the iteration is complete and the accumulated value gets returned. Frequently, it's the most elegant way to do any non-trivial processing on a collection of items. Referentially transparent When an expression can be replaced with its corresponding value without changing the meaning of the program. REPL (Read, Eval, Print, Loop) Stream A list expressed over time. Trace Copy const trace = label => value => { console.log(`${ label }: ${ value }`)} return value Copy const h = pipe( g, f, trace('after f') ) Trie In many functional programming languages, there are special immutable data structures called trie which are effectively deep frozen - meaning no property can change, regardless of the level of the property in the object hierarchy.","keywords":""},{"title":"Ecmascript","type":0,"sectionRef":"#","url":"ecmascript","content":"","keywords":""},{"title":"Differences in browser support","type":1,"pageTitle":"Ecmascript","url":"ecmascript#differences-in-browser-support","content":"With regards to browser support, people usually talk about “ECMAScript compatibility” rather than “JavaScript compatibility”. "},{"title":"Resources","type":1,"pageTitle":"Ecmascript","url":"ecmascript#resources","content":"What’s the difference between JavaScript and ECMAScript? "},{"title":"ES6 Object Destructuring Default Parameters","type":0,"sectionRef":"#","url":"es6-object-destructuring-default-parameters","content":"","keywords":""},{"title":"Resources","type":1,"pageTitle":"ES6 Object Destructuring Default Parameters","url":"es6-object-destructuring-default-parameters#resources","content":"ES6 Object Destructuring Default Parameters "},{"title":"Deploy blog with Docusaurus","type":0,"sectionRef":"#","url":"deploy-blog-with-docusaurus","content":"","keywords":""},{"title":"Resources","type":1,"pageTitle":"Deploy blog with Docusaurus","url":"deploy-blog-with-docusaurus#resources","content":"DeploymentCreate a robots.txtGenerating a new SSH key "},{"title":"Testing build local","type":1,"pageTitle":"Deploy blog with Docusaurus","url":"deploy-blog-with-docusaurus#testing-build-local","content":"Copy npm run build Copy npm run serve or altogether Copy npm run serve --build --port 80 --host 0.0.0.0 "},{"title":"docusaurus.config.js","type":1,"pageTitle":"Deploy blog with Docusaurus","url":"deploy-blog-with-docusaurus#docusaurusconfigjs","content":"Copy module.exports = { url: \"https://pages.ninja\", baseUrl: \"/\", organizationName: \"pearpages\", // Usually your GitHub org/user name. projectName: \"my-blog\", // Usually your repo name. }; "},{"title":"Using a custom domain","type":1,"pageTitle":"Deploy blog with Docusaurus","url":"deploy-blog-with-docusaurus#using-a-custom-domain","content":"In case you want to use your custom domain for GitHub Pages, create a CNAME file in the static directory. Copy # CNAME pearpages.ninja Anything within the static directory will be copied to the root of the build directory for deployment. At this point you can also think of adding a robots.txt file. info By default, GitHub Pages runs published files through Jekyll. Since Jekyll will discard any files that begin with _, it is recommended that you disable Jekyll by adding an empty file named .nojekyll file to your static directory. This is done by default. Copy User-agent: * Disallow: / "},{"title":"Configuring and apex domain (Using a DNS provider)","type":1,"pageTitle":"Deploy blog with Docusaurus","url":"deploy-blog-with-docusaurus#configuring-and-apex-domain-using-a-dns-provider","content":"GitHub Docs Copy # the IPs are pointing now to GitHub A @ 185.199.108.153 600 seconds A @ 185.199.109.153 1 hour A @ 185.199.110.153 1 hour A @ 185.199.111.153 1 hour # www.yourdomain.com and yourdomain.com point to the same place CNAME www @ 1 hour Once your DNS provider points to GitHub you will be able to use https feature from GitHub. "},{"title":"Manual deploy","type":1,"pageTitle":"Deploy blog with Docusaurus","url":"deploy-blog-with-docusaurus#manual-deploy","content":"It is going to publish to gh-pages using the current branch. Copy GIT_USER=pearpages npm run deploy "},{"title":"Automatic deploy using github actions","type":1,"pageTitle":"Deploy blog with Docusaurus","url":"deploy-blog-with-docusaurus#automatic-deploy-using-github-actions","content":"Generating a new SSH key Use a SSH key (an existing - but not used in GitHub - o create new one) Paste it as a deploy key Copy # public key pbcopy < ~/.ssh/key.pub Paste the private key as GitHub secret. Using name GH_PAGES_DEPLOY Copy # private key pbcopy < ~/.ssh/key Create the workflow file in .github/workflows/publishing.yml Copy name: publishing on: pull_request: branches: [master] push: branches: [master] jobs: checks: if: github.event_name != 'push' runs-on: ubuntu-latest steps: - uses: actions/checkout@v1 - uses: actions/setup-node@v1 with: node-version: '12.x' - name: Test Build run: | if [ -e yarn.lock ]; then yarn install --frozen-lockfile elif [ -e package-lock.json ]; then npm ci else npm i fi npm run build gh-release: if: github.event_name != 'pull_request' runs-on: ubuntu-latest steps: - uses: actions/checkout@v1 - uses: actions/setup-node@v1 with: node-version: '12.x' - name: Add key to allow access to repository env: SSH_AUTH_SOCK: /tmp/ssh_agent.sock run: | mkdir -p ~/.ssh ssh-keyscan github.com >> ~/.ssh/known_hosts echo \"${{ secrets.GH_PAGES_DEPLOY }}\" > ~/.ssh/id_rsa chmod 600 ~/.ssh/id_rsa cat <<EOT >> ~/.ssh/config Host github.com HostName github.com IdentityFile ~/.ssh/id_rsa EOT - name: Release to GitHub Pages env: USE_SSH: true GIT_USER: git run: | git config --global user.email \"actions@gihub.com\" git config --global user.name \"gh-actions\" if [ -e yarn.lock ]; then yarn install --frozen-lockfile elif [ -e package-lock.json ]; then npm ci else npm i fi npx docusaurus deploy "},{"title":"Edit links pointing to your repo","type":1,"pageTitle":"Deploy blog with Docusaurus","url":"deploy-blog-with-docusaurus#edit-links-pointing-to-your-repo","content":"This was you can publish directly from github web. Copy { presets: [ [ '@docusaurus/preset-classic', { docs: { sidebarPath: require.resolve('./sidebars.js'), // Please change this to your repo. editUrl: 'https://github.com/pearpages/my-blog/edit/master/' }, blog: { showReadingTime: true, // Please change this to your repo. editUrl: 'https://github.com/pearpages/my-blog/edit/master/' }, theme: { customCss: require.resolve('./src/css/custom.css'), }, }, ], ], } "},{"title":"Flair Espresso Signature","type":0,"sectionRef":"#","url":"flair-espresso-signature","content":"The espresso machine I want to try. The Signature Series of the Flair Espresso Maker is a step up from the Classic in terms of styling, beauty, and aesthetics. Featuring either a brushed chrome, a matte black or our new white finish and our Signature copper-plated portafilter base, any Flair Signature will be the centerpiece of your kitchen or coffee station. Each Signature comes ready with a stainless steel screen, our Bottomless 2-in-1 Portafilter, and our custome pressure gauge, to produce the very best in espresso. Official PageFlair Espresso Signature in BeanGreen","keywords":""},{"title":"How to remove array duplicates in ES6","type":0,"sectionRef":"#","url":"how-to-remove-array-duplicates-in-es6","content":"","keywords":""},{"title":"1. Using Set","type":1,"pageTitle":"How to remove array duplicates in ES6","url":"how-to-remove-array-duplicates-in-es6#1-using-set","content":"Set is a new data object introduced in ES6. Because Set only lets you store unique values. When you pass in an array, it will remove any duplicate values. It's very simple, very quick and elegant, but I don't think it might be very performant; so I would use it for small arrays. Copy const array = [4, 1, 2, 4, 4, 3] const uniqueSet = new Set(array) const backToArray = [...uniqueSet] "},{"title":"2. Using filter","type":1,"pageTitle":"How to remove array duplicates in ES6","url":"how-to-remove-array-duplicates-in-es6#2-using-filter","content":"Very smart and short solution. Because indexOf will return the first appearance, only the first unique value will stay in the new returning array. Copy const array = [4, 1, 2, 4, 4, 3] array.filter((item, index) => array.indexOf(item) === index) "},{"title":"Getting the duplicates","type":1,"pageTitle":"How to remove array duplicates in ES6","url":"how-to-remove-array-duplicates-in-es6#getting-the-duplicates","content":"Copy array.filter((item, index) => array.indexOf(item) !== index) "},{"title":"3. Using reduce","type":1,"pageTitle":"How to remove array duplicates in ES6","url":"how-to-remove-array-duplicates-in-es6#3-using-reduce","content":"Copy const array = [4, 1, 2, 4, 4, 3] array.reduce((unique, item) => unique.includes(item) ? unique : [...unique, item], []) "},{"title":"Favicons","type":0,"sectionRef":"#","url":"favicons","content":"","keywords":""},{"title":"sizes (px)","type":1,"pageTitle":"Favicons","url":"favicons#sizes-px","content":""},{"title":"Web (main/general)","type":1,"pageTitle":"Favicons","url":"favicons#web-maingeneral","content":"16x16: browser favicon32x32: taskbar shortcut icon (used by default by Docusaurus)96x96: desktop shortcut icon (and Google TV) Copy <link rel=\"icon\" type=\"image/png\" href=\"https://cdn.yourwebsite.com/favicon-16x16.png\" sizes=\"16x16\"> <link rel=\"icon\" type=\"image/png\" href=\"https://cdn.yourwebsite.com/favicon-32x32.png\" sizes=\"32x32\"> <link rel=\"icon\" type=\"image/png\" href=\"https://cdn.yourwebsite.com/favicon-96x96.png\" sizes=\"96x96\"> "},{"title":"Apple touch icons","type":1,"pageTitle":"Favicons","url":"favicons#apple-touch-icons","content":"120x120: iPhone Retina (iOS 7)180x180: iPhone 6 Plus (iOS 8+)152x152: iPad Retina (iOS 7)167x167: iPad Pro (iOS 8+) Do you actually need to declare these HTML tags in the <head>? No. As long as the touch icons are uploaded to the root folder of the website, Apple will know to look for them there, however, other operating systems also use these icons — even Android! It’s better to define them in the <head>. Copy <link rel=\"apple-touch-icon\" href=\"older-iPhone.png\"> // 120px <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"iPhone-6-Plus.png\"> <link rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"iPad-Retina.png\"> <link rel=\"apple-touch-icon\" sizes=\"167x167\" href=\"iPad-Pro.png\"> "},{"title":"Windows","type":1,"pageTitle":"Favicons","url":"favicons#windows","content":"70x70270x270310x310310x150 A browserconfig.xml file with the following code should be uploaded to the root directory of your website Copy <?xml version=\"1.0\" encoding=\"utf-8\"?> <browserconfig> <msapplication> <tile> <square70x70logo src=\"https://cdn.yourwebsite.com/mstile-70x70.png\"/> <square150x150logo src=\"https://cdn.yourwebsite.com/mstile-270x270.png\"/> <square310x310logo src=\"https://cdn.yourwebsite.com/mstile-310x310.png\"/> <wide310x150logo src=\"https://cdn.yourwebsite.com/mstile-310x150.png\"/> <TileColor>#2b5797</TileColor> </tile> </msapplication> </browserconfig> "},{"title":"Other","type":1,"pageTitle":"Favicons","url":"favicons#other","content":"128x128: Chrome Webstore icon196x196: Android Chrome icon228x228: Opera Coast icon "},{"title":"The Essential Meta Tags for Social Media","type":1,"pageTitle":"Favicons","url":"favicons#the-essential-meta-tags-for-social-media","content":"The Essential Meta Tags for Social Media "},{"title":"In Docusaurus","type":1,"pageTitle":"Favicons","url":"favicons#in-docusaurus","content":"Faviconflaticon Copy <!-- autogenerated by Docusaurus --> <link rel=\"shortcut icon\" href=\"/img/favicon.png\" data-react-helmet=\"true\"> Copy module.exports = { favicon: 'https://v2.docusaurus.io/favicon.ico', }; "},{"title":"Resources","type":1,"pageTitle":"Favicons","url":"favicons#resources","content":"Here's Everything You Need to Know About Favicons in 2020Apple's official documentation) "},{"title":"Multiple users in gitconfig","type":0,"sectionRef":"#","url":"multiple-users-in-gitconfig","content":"","keywords":""},{"title":"1. Configure an individual repo which overrides the global configuration","type":1,"pageTitle":"Multiple users in gitconfig","url":"multiple-users-in-gitconfig#1-configure-an-individual-repo-which-overrides-the-global-configuration","content":"Copy git config user.name \"Your Name Here\" git config user.email your@email.com Whereas the default user/email is configured in your ~/.gitconfig Copy git config --global user.name \"Your Name Here\" git config --global user.email your@email.com "},{"title":"2. Use conditional includes","type":1,"pageTitle":"Multiple users in gitconfig","url":"multiple-users-in-gitconfig#2-use-conditional-includes","content":"In the global config ~/.gitconfig Copy [user] name = John Doe email = john@doe.tld [includeIf \"gitdir:~/work/\"] path = ~/work/.gitconfig Work specific config ~/work/.gitconfig Copy [user] email = john.doe@company.tld "},{"title":"My favorite Corgi meme","type":0,"sectionRef":"#","url":"my-favorite-corgi-meme","content":"","keywords":""},{"title":"Bonus","type":1,"pageTitle":"My favorite Corgi meme","url":"my-favorite-corgi-meme#bonus","content":" "},{"title":"Javascript influential books","type":0,"sectionRef":"#","url":"js-influential-books","content":"","keywords":""},{"title":"Resources","type":1,"pageTitle":"Javascript influential books","url":"js-influential-books#resources","content":"12 Books Every JavaScript Developer Should Read by Eric EliottTop 20 of Best JavaScript Books Recommended Most Times by Javascript Pros "},{"title":"The List","type":1,"pageTitle":"Javascript influential books","url":"js-influential-books#the-list","content":"JavaScript for Kids: A Playful Introduction to Programming by Nick Morgan   Composing Software by Eric Elliott   Eloquent JavaScript: A Modern Introduction to Programming by Marijn Haverbeke   JavaScript: The Good Parts by Douglas Crockford   Programming JavaScript Applications: Robust Web Architecture with Node, HTML5, and Moderns JS Libraries by Eric Elliott   Effective JavaScript: 68 Specific Ways to Harness the Power of JavaScript by David Herman   JavaScript: The Definitive Guide by David Flanagan   You Don’t Know JS by Kyle Simpson| Free First Edition Online Book| Free Second Edition Online Book   JavaScript Allongé: The Six Edition by Reginald Braithwaite | Free Book Online   Node.js in Action by Mike Cantelon, Marc Harter, TJ Holowaychuk, and Nathan Rajlich   High Performance Browser Networking by Ilya Grigorik| Free Book Online   Web Audio API by Boris Smus   JavaScript Patterns: Build Better Applications with Coding and Design Patterns by Stoyan Stefanov   Beginning JavaScript And CSS Development with jQuery by Richard York   JavaScript Programmer’s Reference by Alexei White   Secrets of the JavaScript Ninja by John Resig and Bear Bibeault   Learning Javascript Design Patterns by Addy Osmani   High Performance JavaScript by Nicholas C. Zakas   "},{"title":"Programming Jokes","type":0,"sectionRef":"#","url":"programming-jokes","content":"","keywords":""},{"title":"Resources","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#resources","content":"Best Programming Jokes30 Jokes Only Programmers Will GetProgramming Jokes: Top 20 Funniest Jokes Only Programmers will getWhat's the best programming joke that you know? "},{"title":"Jokes","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#jokes","content":""},{"title":"VPN","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#vpn","content":" "},{"title":"Loops","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#loops","content":"Copy Q. How did the programmer die in the shower? A. He read the shampoo bottle instructions: Lather. Rinse. Repeat. Copy A Programmer was walking out of door for work, his wife said “while you’re out, buy some milk” and he never came home. ps. That took me a while to get. "},{"title":"Light bulb","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#light-bulb","content":"Copy How many programmers does it take to change a light bulb? None – It’s a hardware problem "},{"title":"Java","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#java","content":"Copy “Knock, knock.” “Who’s there?” very long pause…. “Java.” Copy Some people see a problem and think \"I know, I'll use Java!\". Now they have a ProblemFactory. Copy Q: Why do Java programmers wear glasses? A: Because they don't C#! "},{"title":"Warnings","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#warnings","content":"Copy A man is smoking a cigarette and blowing smoke rings into the air. His girlfriend becomes irritated with the smoke and says, “Can’t you see the warning on the cigarette pack? Smoking is hazardous to your health!” To which the man replies, “I am a programmer. We don’t worry about warnings; we only worry about errors.” "},{"title":"npm","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#npm","content":"Copy 1/3 of US bandwith is used by Netflix... the rest is used by `rm -rf node_modules && npm install` "},{"title":"Logical operators","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#logical-operators","content":"Copy GF: All you ever talk about is Programming Jokes! I am sick of it! It’s me or your Programming Jokes! Me: You meant to say it’s you XOR my Programming Jokes. GF: I am leaving you. "},{"title":"Race Conditions","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#race-conditions","content":"Copy Knock knock. Race condition. Who's there? "},{"title":"TCP / UDP","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#tcp--udp","content":"Copy What's the best part about TCP jokes? I get to keep telling them until you get them. ps. I've got a really good UDP joke to tell you, but I don't know if you'll get it "},{"title":"if / else","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#if--else","content":"Copy A programmer puts two glasses on his bedside table before going to sleep. A full one, in case he gets thirsty, and an empty one, in case he doesn’t. "},{"title":"Management","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#management","content":"Copy A man flying in a hot air balloon suddenly realizes he’s lost. He reduces height and spots a man down below. He lowers the balloon further and shouts to get directions, \"Excuse me, can you tell me where I am?\" The man below says: \"Yes. You're in a hot air balloon, hovering 30 feet above this field.\" \"You must work in Information Technology,\" says the balloonist. \"I do\" replies the man. \"How did you know?\" \"Well,\" says the balloonist, \"everything you have told me is technically correct, but It's of no use to anyone.\" The man below replies, \"You must work in management.\" \"I do,\" replies the balloonist, \"But how'd you know?\"* \"Well\", says the man, \"you don’t know where you are or where you’re going, but you expect me to be able to help. You’re in the same position you were before we met, but now it’s my fault.\" "},{"title":"Octals","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#octals","content":"Copy Why do programmers confuse halloween and christmas? Because Oct 31 = Dec 25. "},{"title":"Naming","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#naming","content":"Copy Two programmers get into a foo "},{"title":"Project Management","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#project-management","content":"Copy Q: What did the Project Manager say to the Programmer? A: You start coding, I'll go find out what they want. Copy At a recent computer software engineering management course, the participants were given an awkward question to answer: \"If you had just boarded an airliner and discovered that your team of programmers had been responsible for the flight control software, how many of you would disembark immediately?\" Among the ensuing forest of raised hands only one man sat motionless. When asked what he would do, he replied that he would be quite content to stay aboard. With his team's software, he said, the plane was unlikely to even taxi as far as the runway, let alone take off. "},{"title":"Demos","type":1,"pageTitle":"Programming Jokes","url":"programming-jokes#demos","content":" "},{"title":"Reduce Usage Examples","type":0,"sectionRef":"#","url":"reduce","content":"","keywords":""},{"title":"Map","type":1,"pageTitle":"Reduce Usage Examples","url":"reduce#map","content":"Copy function map(fn, arr) { return arr.reduce((acc, item, index, arr) => { return acc.concat(fn(item, index, arr)) }, []) } "},{"title":"Filter","type":1,"pageTitle":"Reduce Usage Examples","url":"reduce#filter","content":"Copy function filter(fn, arr) { return arr.reduce((newArr, item) => { return fn(item) ? newArr.concat([item]) : newArr }, []) } "},{"title":"Compose","type":1,"pageTitle":"Reduce Usage Examples","url":"reduce#compose","content":"Copy function compose(...fns) { return x => fns.reduceRight((v, f) => f(v), x) } "},{"title":"Pipe","type":1,"pageTitle":"Reduce Usage Examples","url":"reduce#pipe","content":"Copy function compose(...fns) { return x => fns.reduce((v, f) => f(v), x) } "},{"title":"Resizing markdown images","type":0,"sectionRef":"#","url":"resizing-markdown-images","content":"After many attempts I have come to the conclusion that the best way is doing through css. And the cleanest way is to use the alt attribute. In the example I am using thumb and thumb autor to style the images. Copy ![thumb Javascript for Kids](../static/blog/2020/12/13/javascsript-for-kids.jpg) &nbsp; ![thumb autor Nick Morgan](../static/blog/2020/12/13/nick-morgan.png) And that is what we write in the .css Copy img[alt^=thumb] { width: 100px; } img[alt^=\"thumb autor\"] { width: 100px; border-radius: 50%; }","keywords":""},{"title":"Romulo Cintra's youtube channel","type":0,"sectionRef":"#","url":"romulo-cintra-youtube-channel","content":"I am very happy to have the chance to follow this youtube channel from my good friend Romulo Cintra. https://www.youtube.com/channel/UCW4imJoguoKQqJEilKKGuFQ?","keywords":""},{"title":"Yup validation with file type and size","type":0,"sectionRef":"#","url":"yup-validation-with-file-type-and-size","content":"","keywords":""},{"title":"Resources","type":1,"pageTitle":"Yup validation with file type and size","url":"yup-validation-with-file-type-and-size#resources","content":"https://github.com/formium/formik/issues/926Formik — Handling files and reCaptchaSandbox Example "},{"title":"Example","type":1,"pageTitle":"Yup validation with file type and size","url":"yup-validation-with-file-type-and-size#example","content":"The trick is to use mixed schema to be able to access the file object. Copy const FILE_SIZE = 160 * 1024 const SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg', 'image/gif', 'image/png'] const iconFileSchema = Yup.mixed() .test('fileSize', 'File size is too large', value => value.size <= FILE_SIZE) .test('fileType', 'Unsupported File Format', value => SUPPORTED_FORMATS.includes(value.type)) "},{"title":"Style Guide","type":0,"sectionRef":"#","url":"docs/","content":"","keywords":""},{"title":"Markdown Syntax","type":1,"pageTitle":"Style Guide","url":"docs/#markdown-syntax","content":"To serve as an example page when styling markdown based Docusaurus sites. "},{"title":"Headers","type":1,"pageTitle":"Style Guide","url":"docs/#headers","content":"H1 - Create the best documentation# "},{"title":"H2 - Create the best documentation","type":1,"pageTitle":"Style Guide","url":"docs/#h2---create-the-best-documentation","content":""},{"title":"H3 - Create the best documentation","type":1,"pageTitle":"Style Guide","url":"docs/#h3---create-the-best-documentation","content":"H4 - Create the best documentation# H5 - Create the best documentation# H6 - Create the best documentation#  "},{"title":"Emphasis","type":1,"pageTitle":"Style Guide","url":"docs/#emphasis","content":"Emphasis, aka italics, with asterisks or underscores. Strong emphasis, aka bold, with asterisks or underscores. Combined emphasis with asterisks and underscores. Strikethrough uses two tildes. Scratch this.  "},{"title":"Lists","type":1,"pageTitle":"Style Guide","url":"docs/#lists","content":"First ordered list itemAnother item Unordered sub-list. Actual numbers don't matter, just that it's a number Ordered sub-list And another item. Unordered list can use asterisks Or minuses Or pluses  "},{"title":"Links","type":1,"pageTitle":"Style Guide","url":"docs/#links","content":"I'm an inline-style link I'm an inline-style link with title I'm a reference-style link You can use numbers for reference-style link definitions Or leave it empty and use the link text itself. URLs and URLs in angle brackets will automatically get turned into links. http://www.example.com/ or http://www.example.com/ and sometimes example.com (but not on GitHub, for example). Some text to show that the reference links can follow later.  "},{"title":"Images","type":1,"pageTitle":"Style Guide","url":"docs/#images","content":"Here's our logo (hover to see the title text): Inline-style:  Reference-style:  Images from any folder can be used by providing path to file. Path should be relative to markdown file.   "},{"title":"Code","type":1,"pageTitle":"Style Guide","url":"docs/#code","content":"Copy var s = 'JavaScript syntax highlighting'; alert(s); Copy s = \"Python syntax highlighting\" print(s) Copy No language indicated, so no syntax highlighting. But let's throw in a <b>tag</b>. Copy function highlightMe() { console.log('This line can be highlighted!'); }  "},{"title":"Tables","type":1,"pageTitle":"Style Guide","url":"docs/#tables","content":"Colons can be used to align columns. Tables\tAre\tCoolcol 3 is\tright-aligned\t\\$1600 col 2 is\tcentered\t\\$12 zebra stripes\tare neat\t\\$1 There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown. Markdown\tLess\tPrettyStill\trenders\tnicely 1\t2\t3  "},{"title":"Blockquotes","type":1,"pageTitle":"Style Guide","url":"docs/#blockquotes","content":"Blockquotes are very handy in email to emulate reply text. This line is part of the same quote. Quote break. This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can put Markdown into a blockquote.  "},{"title":"Inline HTML","type":1,"pageTitle":"Style Guide","url":"docs/#inline-html","content":"Definition list Is something people use sometimes. Markdown in HTML Does *not* work **very** well. Use HTML tags.  "},{"title":"Line Breaks","type":1,"pageTitle":"Style Guide","url":"docs/#line-breaks","content":"Here's a line for us to start with. This line is separated from the one above by two newlines, so it will be a separate paragraph. This line is also a separate paragraph, but... This line is only separated by a single newline, so it's a separate line in the same paragraph.  "},{"title":"Admonitions","type":1,"pageTitle":"Style Guide","url":"docs/#admonitions","content":"note This is a note tip This is a tip important This is important caution This is a caution warning This is a warning "},{"title":"The Builder pattern","type":0,"sectionRef":"#","url":"the-builder-pattern","content":"","keywords":""},{"title":"The issue","type":1,"pageTitle":"The Builder pattern","url":"the-builder-pattern#the-issue","content":"Creating an object with too many arguments, using new and not returning a plain object. Copy const frog = new Frog(\"Bob\", 9, 2.2, \"male\"); "},{"title":"Using a class builder","type":1,"pageTitle":"The Builder pattern","url":"the-builder-pattern#using-a-class-builder","content":"With a class builder you can use setters, so the arguments are explicit. Copy class FrogBuilder { constructor(name, gender) { this.name = name; this.gender = gender; } setWeight(weight) { this.weight = weight; return this; } setHeight(height) { this.height = height; return this; } build() { if (!(\"weight\" in this)) { throw new Error(\"Weight is missing\"); } if (!(\"height\" in this)) { throw new Error(\"Height is missing\"); } return { name: this.name, weight: this.weight, height: this.height, gender: this.gender, }; } } And here you have it looks now: Copy const leon = new FrogBuilder(\"Leon\", \"male\") .setWeight(14) .setHeight(3.7) .build(); "},{"title":"Without class","type":1,"pageTitle":"The Builder pattern","url":"the-builder-pattern#without-class","content":"The same implementation without using class Copy function FrogBuilder(name, gender) { this.name = name; this.gender = gender; this.setWeight = (weight) => { this.weight = weight; return this }; this.setHeight = (height) => { this.height = height; return this }; this.build = () => { if (!(\"weight\" in this)) { // see usage in info throw new Error(\"Weight is missing\"); } if (!(\"height\" in this)) { throw new Error(\"Height is missing\"); } return { name: this.name, weight: this.weight, height: this.height, gender: this.gender, }; }; } info How to use in operator Copy const leon = new FrogBuilder(\"Leon\", \"male\") .setWeight(14) .setHeight(3.7) .build(); "},{"title":"Purely functional","type":1,"pageTitle":"The Builder pattern","url":"the-builder-pattern#purely-functional","content":"This is my favorite because I am not a fan of new. Copy function frogBuilder({name, weight, height, gender} = {}) { return { build: () => {{ name, weight, height, gender }), setName: (name) => frogBuilder({name}), setWeight: (weight) => frogBuilder({weight}), setHeight: (height) => frogBuilder({height}), setGender: (gender) => frogBuilder({gender}), } } Copy const leon = frogBuilder() .setName('Leon') .setGender('male') .setWeight(14) .setHeight(3.7) .build() "},{"title":"Powered by MDX","type":0,"sectionRef":"#","url":"docs/mdx","content":"You can write JSX and use React components within your Markdown thanks to MDX. Docusaurus green and Facebook blue are my favorite colors. I can write Markdown alongside my JSX!","keywords":""}]